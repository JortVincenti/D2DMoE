Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 562, in train
    setup_accelerator(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 377, in setup_accelerator
    mixed_precision=args.mixed_precision,
                    ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Args' object has no attribute 'mixed_precision'







=======================================================   RESTART [01-17 01:01:14]   =======================================================
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 563, in train
    setup_files_and_logging(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 494, in setup_files_and_logging
    args.runs_dir.mkdir(parents=True, exist_ok=True)
    ^^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'mkdir'







=======================================================   RESTART [01-17 17:03:54]   =======================================================
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 566, in train
    setup_files_and_logging(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 498, in setup_files_and_logging
    _, run_name = generate_run_name(args)
                  ^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 528, in generate_run_name
    args_dict = OmegaConf.to_container(args, resolve=True)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/omegaconf.py", line 569, in to_container
    raise ValueError(
ValueError: Input cfg is not an OmegaConf config object (Args)







=======================================================   RESTART [01-17 17:13:52]   =======================================================
Traceback (most recent call last):
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 532, in generate_run_name
    args_dict = OmegaConf.to_container(args, resolve=True)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/omegaconf.py", line 569, in to_container
    raise ValueError(
ValueError: Input cfg is not an OmegaConf config object (Args)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 566, in train
    setup_files_and_logging(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 498, in setup_files_and_logging
    _, run_name = generate_run_name(args)
                  ^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 544, in generate_run_name
    unsupported_keys = list(args.keys())  # All keys in case args is not an OmegaConf object
                            ^^^^^^^^^
AttributeError: 'Args' object has no attribute 'keys'







=======================================================   RESTART [01-17 17:23:51]   =======================================================
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 566, in train
    setup_files_and_logging(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 498, in setup_files_and_logging
    _, run_name = generate_run_name(args)
                  ^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 529, in generate_run_name
    if "cfg" in args:
       ^^^^^^^^^^^^^
TypeError: argument of type 'Args' is not iterable







=======================================================   RESTART [01-17 17:26:17]   =======================================================
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 566, in train
    setup_files_and_logging(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 498, in setup_files_and_logging
    _, run_name = generate_run_name(args)
                  ^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 532, in generate_run_name
    args_dict = OmegaConf.to_container(args, resolve=True)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/omegaconf.py", line 569, in to_container
    raise ValueError(
ValueError: Input cfg is not an OmegaConf config object (Args)







=======================================================   RESTART [01-17 17:41:26]   =======================================================
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 566, in train
    setup_files_and_logging(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 498, in setup_files_and_logging
    _, run_name = generate_run_name(args)
                  ^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 529, in generate_run_name
    args_dict = OmegaConf.to_container(args, resolve=True)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/omegaconf.py", line 569, in to_container
    raise ValueError(
ValueError: Input cfg is not an OmegaConf config object (Args)







=======================================================   RESTART [01-17 18:46:27]   =======================================================
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 563, in train
    args: arg_util.Args = arg_util.init_dist_and_get_args()
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/arg_util.py", line 273, in init_dist_and_get_args
    bs_per_gpu = round(args.bs / args.ac / misc.get_world_size())
                                           ^^^^^^^^^^^^^^^^^^^
AttributeError: module 'utils_var.misc' has no attribute 'get_world_size'







=======================================================   RESTART [01-17 18:48:40]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 567, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 385, in setup_model
    from models import VAR, VQVAE, build_vae_var
ModuleNotFoundError: No module named 'models'







=======================================================   RESTART [01-17 18:51:12]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 567, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 398, in setup_model
    tc.model = misc.create_model(args.model_class, args.model_args)
               ^^^^^^^^^^^^^^^^^
AttributeError: module 'utils_var.misc' has no attribute 'create_model'







=======================================================   RESTART [01-17 18:54:17]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 570, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 401, in setup_model
    tc.model = misc.create_model(args.model_class, args.model_args)
               ^^^^^^^^^^^^^^^^^
AttributeError: module 'utils_var.misc' has no attribute 'create_model'







=======================================================   RESTART [01-17 18:58:41]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 568, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 389, in setup_model
    model_ckpt = f'var_d{args.model_depth}.pth'
                         ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 355, in __getattr__
    self._format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/base.py", line 231, in _format_and_raise
    format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 899, in format_and_raise
    _raise(ex, cause)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 797, in _raise
    raise ex.with_traceback(sys.exc_info()[2])  # set env var OC_CAUSE=1 for full trace
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 351, in __getattr__
    return self._get_impl(
           ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 442, in _get_impl
    node = self._get_child(
           ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/basecontainer.py", line 73, in _get_child
    child = self._get_node(
            ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 480, in _get_node
    raise ConfigKeyError(f"Missing key {key!s}")
omegaconf.errors.ConfigAttributeError: Missing key model_depth
    full_key: model_depth
    object_type=dict







=======================================================   RESTART [01-17 19:02:14]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:395: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae.load_state_dict(torch.load(vae_ckpt, map_location='cpu'))
/gpfs/home2/jvincenti/D2DMoE/train.py:396: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  var_model.load_state_dict(torch.load(model_ckpt, map_location='cpu'))
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 569, in train
    setup_data(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 403, in setup_data
    num_classes, train_dataset, val_dataset = build_dataset(args.data_path, args.data_load_reso)
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/data.py", line 31, in build_dataset
    train_set = DatasetFolder(root=osp.join(data_path, 'train'), loader=pil_loader, extensions=IMG_EXTENSIONS, transform=train_aug)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torchvision/datasets/folder.py", line 149, in __init__
    classes, class_to_idx = self.find_classes(self.root)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torchvision/datasets/folder.py", line 234, in find_classes
    return find_classes(directory)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torchvision/datasets/folder.py", line 41, in find_classes
    classes = sorted(entry.name for entry in os.scandir(directory) if entry.is_dir())
                                             ^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'D2DMoE/shared/sets/datasets/vision/TinyImageNet/train'







=======================================================   RESTART [01-17 19:04:15]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:395: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae.load_state_dict(torch.load(vae_ckpt, map_location='cpu'))
/gpfs/home2/jvincenti/D2DMoE/train.py:396: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  var_model.load_state_dict(torch.load(model_ckpt, map_location='cpu'))
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 569, in train
    setup_data(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 403, in setup_data
    num_classes, train_dataset, val_dataset = build_dataset(args.data_path, args.data_load_reso)
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/data.py", line 32, in build_dataset
    val_set = DatasetFolder(root=osp.join(data_path, 'val'), loader=pil_loader, extensions=IMG_EXTENSIONS, transform=val_aug)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torchvision/datasets/folder.py", line 149, in __init__
    classes, class_to_idx = self.find_classes(self.root)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torchvision/datasets/folder.py", line 234, in find_classes
    return find_classes(directory)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torchvision/datasets/folder.py", line 41, in find_classes
    classes = sorted(entry.name for entry in os.scandir(directory) if entry.is_dir())
                                             ^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'shared/sets/datasets/vision/TinyImageNet/val'







=======================================================   RESTART [01-17 19:06:47]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:395: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae.load_state_dict(torch.load(vae_ckpt, map_location='cpu'))
/gpfs/home2/jvincenti/D2DMoE/train.py:396: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  var_model.load_state_dict(torch.load(model_ckpt, map_location='cpu'))
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 570, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 429, in setup_optimization
    optimizer=torch.optim.AdamW(params, lr=args.lr, weight_decay=args.weight_decay)
                                           ^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 355, in __getattr__
    self._format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/base.py", line 231, in _format_and_raise
    format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 899, in format_and_raise
    _raise(ex, cause)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 797, in _raise
    raise ex.with_traceback(sys.exc_info()[2])  # set env var OC_CAUSE=1 for full trace
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 351, in __getattr__
    return self._get_impl(
           ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 442, in _get_impl
    node = self._get_child(
           ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/basecontainer.py", line 73, in _get_child
    child = self._get_node(
            ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 480, in _get_node
    raise ConfigKeyError(f"Missing key {key!s}")
omegaconf.errors.ConfigAttributeError: Missing key lr
    full_key: lr
    object_type=dict







=======================================================   RESTART [01-17 19:13:19]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:395: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae.load_state_dict(torch.load(vae_ckpt, map_location='cpu'))
/gpfs/home2/jvincenti/D2DMoE/train.py:396: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  var_model.load_state_dict(torch.load(model_ckpt, map_location='cpu'))
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 584, in train
    setup_state(tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 566, in setup_state
    tc.state = misc.init_state()
               ^^^^^^^^^^^^^^^
AttributeError: module 'utils_var.misc' has no attribute 'init_state'







=======================================================   RESTART [01-17 19:32:51]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:395: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae.load_state_dict(torch.load(vae_ckpt, map_location='cpu'))
/gpfs/home2/jvincenti/D2DMoE/train.py:396: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  var_model.load_state_dict(torch.load(model_ckpt, map_location='cpu'))
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 589, in train
    patch_nums=args_util.patch_nums, #(1, 2, 3, 4, 5, 6, 8, 10, 13, 16),
               ^^^^^^^^^
NameError: name 'args_util' is not defined. Did you mean: 'arg_util'?







=======================================================   RESTART [01-17 19:36:14]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:395: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae.load_state_dict(torch.load(vae_ckpt, map_location='cpu'))
/gpfs/home2/jvincenti/D2DMoE/train.py:396: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  var_model.load_state_dict(torch.load(model_ckpt, map_location='cpu'))
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 591, in train
    vae_local=tc.model.vae,
              ^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1729, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'VAR' object has no attribute 'vae'. Did you mean: 'Cvae'?







=======================================================   RESTART [01-17 19:42:25]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:395: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae.load_state_dict(torch.load(vae_ckpt, map_location='cpu'))
/gpfs/home2/jvincenti/D2DMoE/train.py:396: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  var_model.load_state_dict(torch.load(model_ckpt, map_location='cpu'))
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 583, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 397, in setup_model
    tc.model.var = var_model
    ^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'var'







=======================================================   RESTART [01-17 19:49:24]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:395: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae.load_state_dict(torch.load(vae_ckpt, map_location='cpu'))
/gpfs/home2/jvincenti/D2DMoE/train.py:396: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  var_model.load_state_dict(torch.load(model_ckpt, map_location='cpu'))
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 595, in train
    var=tc_model_var,
        ^^^^^^^^^^^^
NameError: name 'tc_model_var' is not defined







=======================================================   RESTART [01-17 19:50:55]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:395: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae.load_state_dict(torch.load(vae_ckpt, map_location='cpu'))
/gpfs/home2/jvincenti/D2DMoE/train.py:396: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  var_model.load_state_dict(torch.load(model_ckpt, map_location='cpu'))
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 597, in train
    label_smooth=args.label_smooth
                 ^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 355, in __getattr__
    self._format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/base.py", line 231, in _format_and_raise
    format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 899, in format_and_raise
    _raise(ex, cause)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 797, in _raise
    raise ex.with_traceback(sys.exc_info()[2])  # set env var OC_CAUSE=1 for full trace
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 351, in __getattr__
    return self._get_impl(
           ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 442, in _get_impl
    node = self._get_child(
           ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/basecontainer.py", line 73, in _get_child
    child = self._get_node(
            ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 480, in _get_node
    raise ConfigKeyError(f"Missing key {key!s}")
omegaconf.errors.ConfigAttributeError: Missing key label_smooth
    full_key: label_smooth
    object_type=dict







=======================================================   RESTART [01-17 19:52:58]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:395: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae.load_state_dict(torch.load(vae_ckpt, map_location='cpu'))
/gpfs/home2/jvincenti/D2DMoE/train.py:396: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  var_model.load_state_dict(torch.load(model_ckpt, map_location='cpu'))
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 600, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 450, in training_loop
    for epoch in range(args.start_epoch, args.epochs):
                       ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 355, in __getattr__
    self._format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/base.py", line 231, in _format_and_raise
    format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 899, in format_and_raise
    _raise(ex, cause)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 797, in _raise
    raise ex.with_traceback(sys.exc_info()[2])  # set env var OC_CAUSE=1 for full trace
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 351, in __getattr__
    return self._get_impl(
           ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 442, in _get_impl
    node = self._get_child(
           ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/basecontainer.py", line 73, in _get_child
    child = self._get_node(
            ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 480, in _get_node
    raise ConfigKeyError(f"Missing key {key!s}")
omegaconf.errors.ConfigAttributeError: Missing key start_epoch
    full_key: start_epoch
    object_type=dict







=======================================================   RESTART [01-17 23:31:13]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:314: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 458, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 316, in setup_model
    vae_local: VQVAE = args.compile_model(vae_local, args.vfast)
                       ^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 355, in __getattr__
    self._format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/base.py", line 231, in _format_and_raise
    format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 899, in format_and_raise
    _raise(ex, cause)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 797, in _raise
    raise ex.with_traceback(sys.exc_info()[2])  # set env var OC_CAUSE=1 for full trace
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 351, in __getattr__
    return self._get_impl(
           ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 442, in _get_impl
    node = self._get_child(
           ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/basecontainer.py", line 73, in _get_child
    child = self._get_node(
            ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 480, in _get_node
    raise ConfigKeyError(f"Missing key {key!s}")
omegaconf.errors.ConfigAttributeError: Missing key compile_model
    full_key: compile_model
    object_type=dict







=======================================================   RESTART [01-17 23:38:44]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:323: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 467, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 330, in setup_model
    tc.model_vae = vae # Trained VQVAE model
                   ^^^
NameError: name 'vae' is not defined. Did you mean: 'var'?







=======================================================   RESTART [01-17 23:41:14]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:323: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 469, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 358, in setup_optimization
    names, paras, para_groups = filter_params(tc.model_var, nowd_keys={
                                              ^^^^^^^^^^^^
AttributeError: 'TrainingContext' object has no attribute 'model_var'. Did you mean: 'model_vae'?







=======================================================   RESTART [01-17 23:44:22]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:323: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 483, in train
    if trainer_state is not None and len(trainer_state):
       ^^^^^^^^^^^^^
NameError: name 'trainer_state' is not defined. Did you mean: 'TrainingState'?







=======================================================   RESTART [01-17 23:49:19]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:324: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 487, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 380, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 120, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 192, in train_one_ep
    for it, (inp, label) in me.log_every(start_it, iters_train, ld_or_itrt, 30 if iters_train > 8000 else 5, header):
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/misc.py", line 321, in log_every
    for i, obj in enumerate(itrt):
                  ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 673, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/utils/data/_utils/fetch.py", line 52, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
            ~~~~~~~~~~~~^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torchvision/datasets/folder.py", line 244, in __getitem__
    path, target = self.samples[index]
                   ~~~~~~~~~~~~^^^^^^^
TypeError: list indices must be integers or slices, not list







=======================================================   RESTART [01-17 23:57:25]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:330: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 493, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 386, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 120, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 195, in train_one_ep
    print(next(iter(ld_or_itrt)))
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 673, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/utils/data/_utils/fetch.py", line 52, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
            ~~~~~~~~~~~~^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torchvision/datasets/folder.py", line 244, in __getitem__
    path, target = self.samples[index]
                   ~~~~~~~~~~~~^^^^^^^
TypeError: list indices must be integers or slices, not list







=======================================================   RESTART [01-18 00:09:55]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:330: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 493, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 386, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 120, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 195, in train_one_ep
    print(next(iter(ld_or_itrt)))
               ^^^^^^^^^^^^^^^^
TypeError: 'NoneType' object is not iterable







=======================================================   RESTART [01-18 00:11:59]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:330: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 481, in train
    setup_data(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 345, in setup_data
    types = str((type(dataset_train).__name__, type(dataset_val).__name__))
                      ^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'dataset_train' where it is not associated with a value







=======================================================   RESTART [01-18 00:15:26]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:330: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 481, in train
    setup_data(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 345, in setup_data
    types = str((type(train_dataset).__name__, type(dataset_val).__name__))
                                                    ^^^^^^^^^^^
NameError: name 'dataset_val' is not defined







=======================================================   RESTART [01-18 00:16:56]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:330: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 481, in train
    setup_data(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 356, in setup_data
    generator=args.get_different_generator_for_each_rank(), # worker_init_fn=worker_init_fn,
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 355, in __getattr__
    self._format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/base.py", line 231, in _format_and_raise
    format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 899, in format_and_raise
    _raise(ex, cause)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 797, in _raise
    raise ex.with_traceback(sys.exc_info()[2])  # set env var OC_CAUSE=1 for full trace
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 351, in __getattr__
    return self._get_impl(
           ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 442, in _get_impl
    node = self._get_child(
           ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/basecontainer.py", line 73, in _get_child
    child = self._get_node(
            ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 480, in _get_node
    raise ConfigKeyError(f"Missing key {key!s}")
omegaconf.errors.ConfigAttributeError: Missing key get_different_generator_for_each_rank
    full_key: get_different_generator_for_each_rank
    object_type=dict







=======================================================   RESTART [01-18 00:22:59]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:332: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 491, in train
    setup_data(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 366, in setup_data
    generator=args.get_different_generator_for_each_rank(args), # worker_init_fn=worker_init_fn,
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 355, in __getattr__
    self._format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/base.py", line 231, in _format_and_raise
    format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 899, in format_and_raise
    _raise(ex, cause)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 797, in _raise
    raise ex.with_traceback(sys.exc_info()[2])  # set env var OC_CAUSE=1 for full trace
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 351, in __getattr__
    return self._get_impl(
           ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 442, in _get_impl
    node = self._get_child(
           ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/basecontainer.py", line 73, in _get_child
    child = self._get_node(
            ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 480, in _get_node
    raise ConfigKeyError(f"Missing key {key!s}")
omegaconf.errors.ConfigAttributeError: Missing key get_different_generator_for_each_rank
    full_key: get_different_generator_for_each_rank
    object_type=dict







=======================================================   RESTART [01-18 00:25:27]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:332: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 491, in train
    setup_data(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 366, in setup_data
    generator=get_different_generator_for_each_rank(args), # worker_init_fn=worker_init_fn,
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 355, in __getattr__
    self._format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/base.py", line 231, in _format_and_raise
    format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 899, in format_and_raise
    _raise(ex, cause)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 797, in _raise
    raise ex.with_traceback(sys.exc_info()[2])  # set env var OC_CAUSE=1 for full trace
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 351, in __getattr__
    return self._get_impl(
           ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 442, in _get_impl
    node = self._get_child(
           ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/basecontainer.py", line 73, in _get_child
    child = self._get_node(
            ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 480, in _get_node
    raise ConfigKeyError(f"Missing key {key!s}")
omegaconf.errors.ConfigAttributeError: Missing key get_different_generator_for_each_rank
    full_key: get_different_generator_for_each_rank
    object_type=dict







=======================================================   RESTART [01-18 00:29:59]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:332: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 491, in train
    setup_data(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 369, in setup_data
    shuffle=True, fill_last=True, rank=dist.get_rank(), world_size=dist.get_world_size(), start_ep=start_ep, start_it=start_it,
                                                                                                   ^^^^^^^^
NameError: name 'start_ep' is not defined







=======================================================   RESTART [01-18 00:33:31]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:332: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 493, in train
    setup_data(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 377, in setup_data
    iters_train = len(ld_train)
                      ^^^^^^^^
UnboundLocalError: cannot access local variable 'ld_train' where it is not associated with a value







=======================================================   RESTART [01-18 00:36:33]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:332: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 508, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 401, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 122, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 227, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 106, in train_step
    gt_idx_Bl: List[ITen] = self.vae_local.img_to_idxBl(inp_B3HW)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/vqvae.py", line 66, in img_to_idxBl
    f = self.quant_conv(self.encoder(inp_img_no_grad))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 146, in forward
    h = self.conv_in(x)
        ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/conv.py", line 458, in forward
    return self._conv_forward(input, self.weight, self.bias)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/conv.py", line 454, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor







=======================================================   RESTART [01-18 00:48:44]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:326: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 502, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 395, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 122, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 221, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 106, in train_step
    gt_idx_Bl: List[ITen] = self.vae_local.img_to_idxBl(inp_B3HW)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/vqvae.py", line 66, in img_to_idxBl
    f = self.quant_conv(self.encoder(inp_img_no_grad))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 146, in forward
    h = self.conv_in(x)
        ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/conv.py", line 458, in forward
    return self._conv_forward(input, self.weight, self.bias)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/conv.py", line 454, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor







=======================================================   RESTART [01-18 00:54:47]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:328: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 504, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 397, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 122, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 223, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 106, in train_step
    gt_idx_Bl: List[ITen] = self.vae_local.img_to_idxBl(inp_B3HW)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/vqvae.py", line 66, in img_to_idxBl
    f = self.quant_conv(self.encoder(inp_img_no_grad))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 146, in forward
    h = self.conv_in(x)
        ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/conv.py", line 458, in forward
    return self._conv_forward(input, self.weight, self.bias)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/conv.py", line 454, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor







=======================================================   RESTART [01-18 01:08:00]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:328: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 504, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 397, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 122, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 223, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 106, in train_step
    gt_idx_Bl: List[ITen] = self.vae_local.img_to_idxBl(inp_B3HW)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/vqvae.py", line 66, in img_to_idxBl
    f = self.quant_conv(self.encoder(inp_img_no_grad))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 146, in forward
    h = self.conv_in(x)
        ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/conv.py", line 458, in forward
    return self._conv_forward(input, self.weight, self.bias)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/conv.py", line 454, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor







=======================================================   RESTART [01-18 01:10:33]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:328: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 504, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 397, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 122, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 223, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 106, in train_step
    gt_idx_Bl: List[ITen] = self.vae_local.img_to_idxBl(inp_B3HW)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/vqvae.py", line 66, in img_to_idxBl
    f = self.quant_conv(self.encoder(inp_img_no_grad))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 146, in forward
    h = self.conv_in(x)
        ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/conv.py", line 458, in forward
    return self._conv_forward(input, self.weight, self.bias)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/conv.py", line 454, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor







=======================================================   RESTART [01-18 01:13:59]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:328: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 504, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 397, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 122, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 223, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 106, in train_step
    gt_idx_Bl: List[ITen] = self.vae_local.img_to_idxBl(inp_B3HW)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/vqvae.py", line 66, in img_to_idxBl
    f = self.quant_conv(self.encoder(inp_img_no_grad))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 149, in forward
    h = self.down[i_level].block[i_block](h)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 58, in forward
    h = self.conv1(F.silu(self.norm1(x), inplace=True))
                          ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/normalization.py", line 288, in forward
    return F.group_norm(
           ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/functional.py", line 2606, in group_norm
    return torch.group_norm(input, num_groups, weight, bias, eps, torch.backends.cudnn.enabled)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 30.00 GiB. GPU 0 has a total capacity of 39.50 GiB of which 6.84 GiB is free. Including non-PyTorch memory, this process has 32.65 GiB memory in use. Of the allocated memory 32.13 GiB is allocated by PyTorch, and 36.93 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)







=======================================================   RESTART [01-20 16:24:40]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:328: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 504, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 397, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 122, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 223, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 106, in train_step
    gt_idx_Bl: List[ITen] = self.vae_local.img_to_idxBl(inp_B3HW)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/vqvae.py", line 66, in img_to_idxBl
    f = self.quant_conv(self.encoder(inp_img_no_grad))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 149, in forward
    h = self.down[i_level].block[i_block](h)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 58, in forward
    h = self.conv1(F.silu(self.norm1(x), inplace=True))
                          ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/normalization.py", line 288, in forward
    return F.group_norm(
           ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/functional.py", line 2606, in group_norm
    return torch.group_norm(input, num_groups, weight, bias, eps, torch.backends.cudnn.enabled)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 30.00 GiB. GPU 0 has a total capacity of 39.50 GiB of which 6.84 GiB is free. Including non-PyTorch memory, this process has 32.65 GiB memory in use. Of the allocated memory 32.13 GiB is allocated by PyTorch, and 36.93 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)







=======================================================   RESTART [01-20 21:09:22]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:328: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 504, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 397, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 122, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 223, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 106, in train_step
    gt_idx_Bl: List[ITen] = self.vae_local.img_to_idxBl(inp_B3HW)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/vqvae.py", line 66, in img_to_idxBl
    f = self.quant_conv(self.encoder(inp_img_no_grad))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 149, in forward
    h = self.down[i_level].block[i_block](h)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 58, in forward
    h = self.conv1(F.silu(self.norm1(x), inplace=True))
                          ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/normalization.py", line 288, in forward
    return F.group_norm(
           ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/functional.py", line 2606, in group_norm
    return torch.group_norm(input, num_groups, weight, bias, eps, torch.backends.cudnn.enabled)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 30.00 GiB. GPU 0 has a total capacity of 39.50 GiB of which 6.84 GiB is free. Including non-PyTorch memory, this process has 32.65 GiB memory in use. Of the allocated memory 32.13 GiB is allocated by PyTorch, and 36.93 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)







=======================================================   RESTART [01-20 21:13:02]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:328: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 504, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 397, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 122, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 223, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 106, in train_step
    gt_idx_Bl: List[ITen] = self.vae_local.img_to_idxBl(inp_B3HW)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/vqvae.py", line 66, in img_to_idxBl
    f = self.quant_conv(self.encoder(inp_img_no_grad))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 149, in forward
    h = self.down[i_level].block[i_block](h)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 58, in forward
    h = self.conv1(F.silu(self.norm1(x), inplace=True))
                          ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/normalization.py", line 288, in forward
    return F.group_norm(
           ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/functional.py", line 2606, in group_norm
    return torch.group_norm(input, num_groups, weight, bias, eps, torch.backends.cudnn.enabled)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 30.00 GiB. GPU 0 has a total capacity of 39.50 GiB of which 6.84 GiB is free. Including non-PyTorch memory, this process has 32.65 GiB memory in use. Of the allocated memory 32.13 GiB is allocated by PyTorch, and 36.93 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)







=======================================================   RESTART [01-20 21:16:10]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:328: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 504, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 397, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 122, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 223, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 106, in train_step
    gt_idx_Bl: List[ITen] = self.vae_local.img_to_idxBl(inp_B3HW)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/vqvae.py", line 66, in img_to_idxBl
    f = self.quant_conv(self.encoder(inp_img_no_grad))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 149, in forward
    h = self.down[i_level].block[i_block](h)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 58, in forward
    h = self.conv1(F.silu(self.norm1(x), inplace=True))
                          ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/normalization.py", line 288, in forward
    return F.group_norm(
           ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/functional.py", line 2606, in group_norm
    return torch.group_norm(input, num_groups, weight, bias, eps, torch.backends.cudnn.enabled)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 30.00 GiB. GPU 0 has a total capacity of 39.50 GiB of which 6.84 GiB is free. Including non-PyTorch memory, this process has 32.65 GiB memory in use. Of the allocated memory 32.13 GiB is allocated by PyTorch, and 36.93 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)







=======================================================   RESTART [01-20 21:26:13]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:329: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 505, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 398, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 123, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 224, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 106, in train_step
    gt_idx_Bl: List[ITen] = self.vae_local.img_to_idxBl(inp_B3HW)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/vqvae.py", line 66, in img_to_idxBl
    f = self.quant_conv(self.encoder(inp_img_no_grad))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 149, in forward
    h = self.down[i_level].block[i_block](h)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 58, in forward
    h = self.conv1(F.silu(self.norm1(x), inplace=True))
                          ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/normalization.py", line 288, in forward
    return F.group_norm(
           ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/functional.py", line 2606, in group_norm
    return torch.group_norm(input, num_groups, weight, bias, eps, torch.backends.cudnn.enabled)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 30.00 GiB. GPU 0 has a total capacity of 39.50 GiB of which 6.84 GiB is free. Including non-PyTorch memory, this process has 32.65 GiB memory in use. Of the allocated memory 32.13 GiB is allocated by PyTorch, and 36.93 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)







=======================================================   RESTART [01-20 21:28:29]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:329: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 505, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 398, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 123, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 224, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 106, in train_step
    gt_idx_Bl: List[ITen] = self.vae_local.img_to_idxBl(inp_B3HW)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/vqvae.py", line 66, in img_to_idxBl
    f = self.quant_conv(self.encoder(inp_img_no_grad))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 149, in forward
    h = self.down[i_level].block[i_block](h)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 58, in forward
    h = self.conv1(F.silu(self.norm1(x), inplace=True))
                          ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/normalization.py", line 288, in forward
    return F.group_norm(
           ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/functional.py", line 2606, in group_norm
    return torch.group_norm(input, num_groups, weight, bias, eps, torch.backends.cudnn.enabled)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 30.00 GiB. GPU 0 has a total capacity of 39.50 GiB of which 6.84 GiB is free. Including non-PyTorch memory, this process has 32.65 GiB memory in use. Of the allocated memory 32.13 GiB is allocated by PyTorch, and 36.93 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)







=======================================================   RESTART [01-20 21:32:35]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:329: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 505, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 398, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 123, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 224, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 106, in train_step
    gt_idx_Bl: List[ITen] = self.vae_local.img_to_idxBl(inp_B3HW)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/vqvae.py", line 66, in img_to_idxBl
    f = self.quant_conv(self.encoder(inp_img_no_grad))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 149, in forward
    h = self.down[i_level].block[i_block](h)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 58, in forward
    h = self.conv1(F.silu(self.norm1(x), inplace=True))
                          ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/normalization.py", line 288, in forward
    return F.group_norm(
           ^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/functional.py", line 2606, in group_norm
    return torch.group_norm(input, num_groups, weight, bias, eps, torch.backends.cudnn.enabled)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 30.00 GiB. GPU 0 has a total capacity of 39.50 GiB of which 6.84 GiB is free. Including non-PyTorch memory, this process has 32.65 GiB memory in use. Of the allocated memory 32.13 GiB is allocated by PyTorch, and 36.93 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)







=======================================================   RESTART [01-20 21:42:29]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:327: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 503, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 396, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 123, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 222, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 106, in train_step
    gt_idx_Bl: List[ITen] = self.vae_local.img_to_idxBl(inp_B3HW)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/vqvae.py", line 66, in img_to_idxBl
    f = self.quant_conv(self.encoder(inp_img_no_grad))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 149, in forward
    h = self.down[i_level].block[i_block](h)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_vae.py", line 59, in forward
    h = self.conv2(self.dropout(F.silu(self.norm2(h), inplace=True)))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/conv.py", line 458, in forward
    return self._conv_forward(input, self.weight, self.bias)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/conv.py", line 454, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 10.00 GiB. GPU 0 has a total capacity of 39.50 GiB of which 7.21 GiB is free. Including non-PyTorch memory, this process has 32.27 GiB memory in use. Of the allocated memory 31.75 GiB is allocated by PyTorch, and 36.93 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)







=======================================================   RESTART [01-20 21:44:14]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:327: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 503, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 396, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 123, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 222, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 112, in train_step
    logits_BLV = self.var(label_B, x_BLCv_wo_first_l)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 514, in forward
    return self.module(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/var.py", line 375, in forward
    x_BLC = b(x=x_BLC, cond_BD=cond_BD_or_gss, attn_bias=attn_bias)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_var.py", line 158, in forward
    x = x + self.drop_path(self.ffn( self.ln_wo_grad(x).mul(scale2.add(1)).add_(shift2) ).mul(gamma2)) # this mul(gamma2) cannot be in-placed when FusedMLP is used
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_var.py", line 52, in forward
    return self.drop(self.fc2( self.act(self.fc1(x)) ))
                                        ^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/linear.py", line 117, in forward
    return F.linear(input, self.weight, self.bias)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 680.00 MiB. GPU 0 has a total capacity of 39.50 GiB of which 254.12 MiB is free. Including non-PyTorch memory, this process has 39.24 GiB memory in use. Of the allocated memory 38.48 GiB is allocated by PyTorch, and 270.89 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)







=======================================================   RESTART [01-20 21:46:07]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:327: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
INFO:submitit:Job has timed out. Ran 8 minutes out of requested 10 minutes.
WARNING:submitit:Caught signal SIGUSR2 on gcn25.local.snellius.surf.nl: this job is timed-out.
INFO:submitit:Job not requeued because: timed-out and not checkpointable.
WARNING:submitit:Bypassing signal SIGCONT
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 503, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 396, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 123, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 222, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 124, in train_step
    grad_norm, scale_log2 = self.var_opt.backward_clip_step(loss=loss, stepping=stepping)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/amp_sc.py", line 48, in backward_clip_step
    loss.backward(retain_graph=False, create_graph=False)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/_tensor.py", line 521, in backward
    torch.autograd.backward(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/autograd/__init__.py", line 289, in backward
    _engine_run_backward(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/autograd/graph.py", line 769, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/job_environment.py", line 226, in checkpoint_and_try_requeue
    raise utils.UncompletedJobError(message)
submitit.core.utils.UncompletedJobError: Job not requeued because: timed-out and not checkpointable.







=======================================================   RESTART [01-20 22:05:20]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:327: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cuda'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
INFO:submitit:Job has timed out. Ran 47 minutes out of requested 50 minutes.
WARNING:submitit:Caught signal SIGUSR2 on gcn46.local.snellius.surf.nl: this job is timed-out.
INFO:submitit:Job not requeued because: timed-out and not checkpointable.
WARNING:submitit:Bypassing signal SIGCONT
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 503, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 396, in training_loop
    main_training(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 123, in main_training
    stats, (sec, remain_time, finish_time) = train_one_ep(
                                             ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 222, in train_one_ep
    grad_norm, scale_log2 = trainer.train_step(
                            ^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 112, in train_step
    logits_BLV = self.var(label_B, x_BLCv_wo_first_l)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 514, in forward
    return self.module(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/var.py", line 375, in forward
    x_BLC = b(x=x_BLC, cond_BD=cond_BD_or_gss, attn_bias=attn_bias)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_var.py", line 157, in forward
    x = x + self.drop_path(self.attn( self.ln_wo_grad(x).mul(scale1.add(1)).add_(shift1), attn_bias=attn_bias ).mul_(gamma1))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/basic_var.py", line 119, in forward
    return self.proj_drop(self.proj(oup))
                          ^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/linear.py", line 117, in forward
    return F.linear(input, self.weight, self.bias)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/job_environment.py", line 226, in checkpoint_and_try_requeue
    raise utils.UncompletedJobError(message)
submitit.core.utils.UncompletedJobError: Job not requeued because: timed-out and not checkpointable.







=======================================================   RESTART [01-21 19:58:37]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 497, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 310, in setup_model
    model = create_model(args.model_class, args.model_args)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 579, in create_model
    return MODEL_NAME_MAP[model_class](**model_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: architectures.pretrained.get_var_d16() argument after ** must be a mapping, not NoneType







=======================================================   RESTART [01-21 20:08:03]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 497, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 310, in setup_model
    model = create_model(args.model_class, args.model_args)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 579, in create_model
    return MODEL_NAME_MAP[model_class](**model_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: architectures.pretrained.get_var_d16() argument after ** must be a mapping, not NoneType







=======================================================   RESTART [01-21 20:09:32]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 497, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 310, in setup_model
    model = create_model(args.model_class, args.model_args)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 581, in create_model
    return MODEL_NAME_MAP[model_class](**model_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/pretrained.py", line 168, in get_var_d16
    if not os.path.exists(model_ckpt):
           ^^
NameError: name 'os' is not defined. Did you forget to import 'os'?







=======================================================   RESTART [01-21 20:13:05]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 497, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 310, in setup_model
    model = create_model(args.model_class, args.model_args)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 581, in create_model
    return MODEL_NAME_MAP[model_class](**model_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/pretrained.py", line 174, in get_var_d16
    var_ckpt = f'var_d{MODEL_DEPTH}.pth'
                       ^^^^^^^^^^^
NameError: name 'MODEL_DEPTH' is not defined







=======================================================   RESTART [01-21 20:15:34]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 498, in train
    setup_data(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 365, in setup_data
    train_data, train_eval_data, test_data = DATASETS_NAME_MAP[args.dataset](**dataset_args)
                                             ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^
KeyError: 'shared/sets/datasets/vision/TinyImageNet'







=======================================================   RESTART [01-21 20:20:58]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 481, in train
    setup_data(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 359, in setup_data
    tc.last_batch = math.ceil(args.epochs * batches_per_epoch - 1)
                              ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'







=======================================================   RESTART [01-21 20:24:09]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 482, in train
    setup_data(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 359, in setup_data
    tc.last_batch = math.ceil(args.epochs * batches_per_epoch - 1)
                              ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'







=======================================================   RESTART [01-21 20:29:22]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 486, in train
    tc.trainer = VARTrainer(
                 ^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 29, in __init__
    self.var, self.vae_local, self.quantize_local = var, vae_local, vae_local.quantize
                                                                    ^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'quantize'







=======================================================   RESTART [01-21 20:47:14]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 517, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 377, in setup_optimization
    if 'selective_weight_decay' in optimizer_args and optimizer_args['selective_weight_decay']:
                                   ^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'optimizer_args' where it is not associated with a value







=======================================================   RESTART [01-21 20:49:45]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 517, in train
    setup_data(args, tc)
    ^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 377, in setup_optimization
    criterion_args = args.loss_args
                                   ^
UnboundLocalError: cannot access local variable 'optimizer_args' where it is not associated with a value







=======================================================   RESTART [01-21 20:53:00]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 518, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 411, in setup_optimization
    tc.scheduler = tc.accelerator.prepare(SCHEDULER_NAME_MAP[args.scheduler_class](tc.optimizer, **scheduler_args))
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/optim/lr_scheduler.py", line 1060, in __init__
    super().__init__(optimizer, last_epoch, verbose)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/optim/lr_scheduler.py", line 93, in __init__
    raise TypeError(f"{type(optimizer).__name__} is not an Optimizer")
TypeError: AmpOptimizer is not an Optimizer







=======================================================   RESTART [01-21 20:58:45]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 511, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 410, in setup_optimization
    tc.scheduler = tc.accelerator.prepare(SCHEDULER_NAME_MAP[args.scheduler_class](tc.optimizer, **scheduler_args))
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/optim/lr_scheduler.py", line 1060, in __init__
    super().__init__(optimizer, last_epoch, verbose)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/optim/lr_scheduler.py", line 93, in __init__
    raise TypeError(f"{type(optimizer).__name__} is not an Optimizer")
TypeError: AmpOptimizer is not an Optimizer







=======================================================   RESTART [01-21 21:19:31]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 511, in train
    tc.trainer = VARTrainer(
                 ^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 29, in __init__
    self.var, self.vae_local, self.quantize_local = var, vae_local, vae_local.quantize
                                                                    ^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'quantize'







=======================================================   RESTART [01-21 21:37:16]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 530, in train
    tc.trainer = VARTrainer(
                 ^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 29, in __init__
    self.var, self.vae_local, self.quantize_local = var, vae_local, vae_local.quantize
                                                                    ^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'quantize'







=======================================================   RESTART [01-21 21:45:11]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 554, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 525, in make_vae
    num_classes=num_classes, depth=args.depth, shared_aln=args.saln, attn_l2_norm=args.anorm,
                ^^^^^^^^^^^
NameError: name 'num_classes' is not defined







=======================================================   RESTART [01-21 21:48:01]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:535: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 554, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 537, in make_vae
    vae_local: VQVAE = args.compile_model(vae_local, args.vfast)
                       ^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 355, in __getattr__
    self._format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/base.py", line 231, in _format_and_raise
    format_and_raise(
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 899, in format_and_raise
    _raise(ex, cause)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/_utils.py", line 797, in _raise
    raise ex.with_traceback(sys.exc_info()[2])  # set env var OC_CAUSE=1 for full trace
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 351, in __getattr__
    return self._get_impl(
           ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 442, in _get_impl
    node = self._get_child(
           ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/basecontainer.py", line 73, in _get_child
    child = self._get_node(
            ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/omegaconf/dictconfig.py", line 480, in _get_node
    raise ConfigKeyError(f"Missing key {key!s}")
omegaconf.errors.ConfigAttributeError: Missing key compile_model
    full_key: compile_model
    object_type=dict







=======================================================   RESTART [01-21 21:53:07]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:536: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 570, in train
    if epochs == 0:
       ^^^^^^
NameError: name 'epochs' is not defined







=======================================================   RESTART [01-21 21:54:55]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:536: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 571, in train
    final_eval(args, tc.trainer, tc.val_loader)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 502, in final_eval
    unwrapped_model = tc.accelerator.unwrap_model(tc.model)
                      ^^
NameError: name 'tc' is not defined. Did you mean: 'gc'?







=======================================================   RESTART [01-21 22:21:05]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:536: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 571, in train
    final_eval(args, tc.trainer, tc.val_loader)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 502, in final_eval
    unwrapped_model = tc.accelerator.unwrap_model(tc.model)
                      ^^
NameError: name 'tc' is not defined. Did you mean: 'gc'?







=======================================================   RESTART [01-21 22:42:48]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 552, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 406, in setup_optimization
    tc.scheduler = tc.accelerator.prepare(SCHEDULER_NAME_MAP[args.scheduler_class](tc.optimizer, **scheduler_args)) #Jort this should be wrapped into tc.accelerator.prepare() but this is not possible with SCHEDULER_NAME_MAP
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: get_linear_schedule_with_warmup() got an unexpected keyword argument 'eta_min'







=======================================================   RESTART [01-21 22:45:51]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 552, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 406, in setup_optimization
    tc.scheduler = tc.accelerator.prepare(SCHEDULER_NAME_MAP[args.scheduler_class](tc.optimizer, **scheduler_args)) #Jort this should be wrapped into tc.accelerator.prepare() but this is not possible with SCHEDULER_NAME_MAP
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: get_linear_schedule_with_warmup() got an unexpected keyword argument 'eta_min'







=======================================================   RESTART [01-21 22:50:21]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 552, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 406, in setup_optimization
    tc.scheduler = tc.accelerator.prepare(SCHEDULER_NAME_MAP[args.scheduler_class](tc.optimizer, **scheduler_args)) #Jort this should be wrapped into tc.accelerator.prepare() but this is not possible with SCHEDULER_NAME_MAP
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/optim/lr_scheduler.py", line 1060, in __init__
    super().__init__(optimizer, last_epoch, verbose)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/optim/lr_scheduler.py", line 93, in __init__
    raise TypeError(f"{type(optimizer).__name__} is not an Optimizer")
TypeError: AmpOptimizer is not an Optimizer







=======================================================   RESTART [01-21 22:57:08]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 552, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 391, in setup_optimization
    tc.optimizer = tc.accelerator.prepare(AmpOptimizer(
                                          ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/amp_sc.py", line 23, in __init__
    super().__init__(optimizer.param_groups, defaults={})
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/optim/optimizer.py", line 358, in __init__
    self.param_groups: List[Dict[str, Any]] = []
    ^^^^^^^^^^^^^^^^^
AttributeError: property 'param_groups' of 'AmpOptimizer' object has no setter







=======================================================   RESTART [01-21 23:01:23]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 552, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 391, in setup_optimization
    tc.optimizer = tc.accelerator.prepare(AmpOptimizer(
                                          ^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/amp_sc.py", line 23, in __init__
    super().__init__(optimizer.param_groups, defaults={})
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/optim/optimizer.py", line 358, in __init__
    self.param_groups: List[Dict[str, Any]] = []
    ^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/amp_sc.py", line 113, in param_groups
    self.base_optimizer.param_groups = new_value
    ^^^^^^^^^^^^^^^^^^^
AttributeError: 'AmpOptimizer' object has no attribute 'base_optimizer'







=======================================================   RESTART [01-21 23:17:43]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:536: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 571, in train
    final_eval(args, tc.trainer, tc.val_loader)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 502, in final_eval
    unwrapped_model = tc.accelerator.unwrap_model(tc.model)
                      ^^
NameError: name 'tc' is not defined. Did you mean: 'gc'?







=======================================================   RESTART [01-21 23:25:26]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:536: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 571, in train
    final_eval(args, tc)
TypeError: final_eval() missing 1 required positional argument: 'ld_val'







=======================================================   RESTART [01-21 23:27:18]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:536: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 571, in train
    final_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 494, in final_eval
    L_mean, L_tail, acc_mean, acc_tail, tot, duration = tc.trainer.eval_ep(tc.ld_val)
                                                                           ^^^^^^^^^
AttributeError: 'TrainingContext' object has no attribute 'ld_val'







=======================================================   RESTART [01-21 23:30:13]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:536: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 571, in train
    final_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 504, in final_eval
    tc.writer.add_scalar('Eval/Test loss', test_loss, global_step=tc.state.current_batch)
                                           ^^^^^^^^^
NameError: name 'test_loss' is not defined







=======================================================   RESTART [01-21 23:38:27]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:536: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 571, in train
    final_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 510, in final_eval
    model_costs, model_params = benchmark(unwrapped_model, tc.test_loader)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/eval.py", line 510, in benchmark
    X, _ = next(iter(data_loader))
                ^^^^^^^^^^^^^^^^^
TypeError: 'NoneType' object is not iterable







=======================================================   RESTART [01-21 23:48:05]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:512: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 547, in train
    final_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 486, in final_eval
    model_costs, model_params = benchmark(unwrapped_model, tc.test_loader)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/eval.py", line 515, in benchmark
    return benchmark_with_sample(model, sample)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/eval.py", line 494, in benchmark_with_sample
    logging.info(f'Ops by operator:\n{model_costs.by_operator()}')
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/fvcore/nn/jit_analysis.py", line 265, in by_operator
    stats = self._analyze()
            ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/fvcore/nn/jit_analysis.py", line 551, in _analyze
    graph = _get_scoped_trace_graph(self._model, self._inputs, self._aliases)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/fvcore/nn/jit_analysis.py", line 176, in _get_scoped_trace_graph
    graph, _ = _get_trace_graph(module, inputs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/jit/_trace.py", line 1497, in _get_trace_graph
    outs = ONNXTracedModule(
           ^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/jit/_trace.py", line 141, in forward
    graph, out = torch._C._create_graph_by_tracing(
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/jit/_trace.py", line 132, in wrapper
    outs.append(self.inner(*trace_inputs))
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1603, in _call_impl
    result = forward_call(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1543, in _slow_forward
    result = self.forward(*input, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: VAR.forward() missing 1 required positional argument: 'x_BLCv_wo_first_l'







=======================================================   RESTART [01-22 00:11:55]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:512: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 547, in train
    final_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 486, in final_eval
    model_costs, model_params = benchmark(unwrapped_model, tc.test_loader)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/eval.py", line 515, in benchmark
    return benchmark_with_sample(model, sample)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/eval.py", line 497, in benchmark_with_sample
    unsupported = model_costs.unsupported_ops()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/fvcore/nn/jit_analysis.py", line 311, in unsupported_ops
    raise RuntimeError(
RuntimeError: Analysis results should be computed before calling unsupported_ops()







=======================================================   RESTART [01-22 00:18:49]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:512: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 547, in train
    final_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 487, in final_eval
    final_results['model_flops'] = model_costs.total()
                                   ^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/fvcore/nn/jit_analysis.py", line 248, in total
    stats = self._analyze()
            ^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/fvcore/nn/jit_analysis.py", line 551, in _analyze
    graph = _get_scoped_trace_graph(self._model, self._inputs, self._aliases)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/fvcore/nn/jit_analysis.py", line 176, in _get_scoped_trace_graph
    graph, _ = _get_trace_graph(module, inputs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/jit/_trace.py", line 1497, in _get_trace_graph
    outs = ONNXTracedModule(
           ^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/jit/_trace.py", line 141, in forward
    graph, out = torch._C._create_graph_by_tracing(
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/jit/_trace.py", line 132, in wrapper
    outs.append(self.inner(*trace_inputs))
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1603, in _call_impl
    result = forward_call(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1543, in _slow_forward
    result = self.forward(*input, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: VAR.forward() missing 1 required positional argument: 'x_BLCv_wo_first_l'







=======================================================   RESTART [01-22 00:27:48]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:512: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
INFO:submitit:Job completed successfully
INFO:submitit:Exiting after successful completion







=======================================================   RESTART [01-22 16:40:23]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:512: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 547, in train
    final_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 470, in final_eval
    L_mean, L_tail, acc_mean, acc_tail, tot, duration = tc.trainer.eval_ep(tc.val_loader)
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 64, in eval_ep
    asdagfasdvs
NameError: name 'asdagfasdvs' is not defined







=======================================================   RESTART [01-22 16:42:47]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:512: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 547, in train
    final_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 470, in final_eval
    L_mean, L_tail, acc_mean, acc_tail, tot, duration = tc.trainer.eval_ep(tc.val_loader)
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 65, in eval_ep
    asdagfasdvs
NameError: name 'asdagfasdvs' is not defined







=======================================================   RESTART [01-22 16:46:18]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:512: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 547, in train
    final_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 470, in final_eval
    L_mean, L_tail, acc_mean, acc_tail, tot, duration = tc.trainer.eval_ep(tc.val_loader)
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 83, in eval_ep
    asdagfasdvs
NameError: name 'asdagfasdvs' is not defined







=======================================================   RESTART [01-22 16:49:18]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:512: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 547, in train
    final_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 470, in final_eval
    L_mean, L_tail, acc_mean, acc_tail, tot, duration = tc.trainer.eval_ep(tc.val_loader)
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 84, in eval_ep
    asdagfasdvs
NameError: name 'asdagfasdvs' is not defined







=======================================================   RESTART [01-22 16:53:22]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:512: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 547, in train
    final_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 470, in final_eval
    L_mean, L_tail, acc_mean, acc_tail, tot, duration = tc.trainer.eval_ep(tc.val_loader)
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 84, in eval_ep
    asdagfasdvs
NameError: name 'asdagfasdvs' is not defined







=======================================================   RESTART [01-22 17:30:51]   =======================================================
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 526, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 281, in setup_model
    model = create_model(args.model_class, args.model_args)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 581, in create_model
    return MODEL_NAME_MAP[model_class](**model_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/pretrained.py", line 265, in get_var_d16
    var_wo_ddp: VAR = args.compile_model(model, 0)
                      ^^^^
NameError: name 'args' is not defined







=======================================================   RESTART [01-22 17:33:52]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:512: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/train.py:534: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  tc.model.load_state_dict(torch.load(var_ckpt, map_location='cuda'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 534, in train
    tc.model.load_state_dict(torch.load(var_ckpt, map_location='cuda'), strict=True)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 2215, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for NullDDP:
	Missing key(s) in state_dict: "module.pos_start", "module.pos_1LC", "module.lvl_1L", "module.attn_bias_for_masking", "module.word_embed.weight", "module.word_embed.bias", "module.class_emb.weight", "module.lvl_embed.weight", "module.blocks.0.attn.scale_mul_1H11", "module.blocks.0.attn.q_bias", "module.blocks.0.attn.v_bias", "module.blocks.0.attn.zero_k_bias", "module.blocks.0.attn.mat_qkv.weight", "module.blocks.0.attn.proj.weight", "module.blocks.0.attn.proj.bias", "module.blocks.0.ffn.fc1.weight", "module.blocks.0.ffn.fc1.bias", "module.blocks.0.ffn.fc2.weight", "module.blocks.0.ffn.fc2.bias", "module.blocks.0.ada_lin.1.weight", "module.blocks.0.ada_lin.1.bias", "module.blocks.1.attn.scale_mul_1H11", "module.blocks.1.attn.q_bias", "module.blocks.1.attn.v_bias", "module.blocks.1.attn.zero_k_bias", "module.blocks.1.attn.mat_qkv.weight", "module.blocks.1.attn.proj.weight", "module.blocks.1.attn.proj.bias", "module.blocks.1.ffn.fc1.weight", "module.blocks.1.ffn.fc1.bias", "module.blocks.1.ffn.fc2.weight", "module.blocks.1.ffn.fc2.bias", "module.blocks.1.ada_lin.1.weight", "module.blocks.1.ada_lin.1.bias", "module.blocks.2.attn.scale_mul_1H11", "module.blocks.2.attn.q_bias", "module.blocks.2.attn.v_bias", "module.blocks.2.attn.zero_k_bias", "module.blocks.2.attn.mat_qkv.weight", "module.blocks.2.attn.proj.weight", "module.blocks.2.attn.proj.bias", "module.blocks.2.ffn.fc1.weight", "module.blocks.2.ffn.fc1.bias", "module.blocks.2.ffn.fc2.weight", "module.blocks.2.ffn.fc2.bias", "module.blocks.2.ada_lin.1.weight", "module.blocks.2.ada_lin.1.bias", "module.blocks.3.attn.scale_mul_1H11", "module.blocks.3.attn.q_bias", "module.blocks.3.attn.v_bias", "module.blocks.3.attn.zero_k_bias", "module.blocks.3.attn.mat_qkv.weight", "module.blocks.3.attn.proj.weight", "module.blocks.3.attn.proj.bias", "module.blocks.3.ffn.fc1.weight", "module.blocks.3.ffn.fc1.bias", "module.blocks.3.ffn.fc2.weight", "module.blocks.3.ffn.fc2.bias", "module.blocks.3.ada_lin.1.weight", "module.blocks.3.ada_lin.1.bias", "module.blocks.4.attn.scale_mul_1H11", "module.blocks.4.attn.q_bias", "module.blocks.4.attn.v_bias", "module.blocks.4.attn.zero_k_bias", "module.blocks.4.attn.mat_qkv.weight", "module.blocks.4.attn.proj.weight", "module.blocks.4.attn.proj.bias", "module.blocks.4.ffn.fc1.weight", "module.blocks.4.ffn.fc1.bias", "module.blocks.4.ffn.fc2.weight", "module.blocks.4.ffn.fc2.bias", "module.blocks.4.ada_lin.1.weight", "module.blocks.4.ada_lin.1.bias", "module.blocks.5.attn.scale_mul_1H11", "module.blocks.5.attn.q_bias", "module.blocks.5.attn.v_bias", "module.blocks.5.attn.zero_k_bias", "module.blocks.5.attn.mat_qkv.weight", "module.blocks.5.attn.proj.weight", "module.blocks.5.attn.proj.bias", "module.blocks.5.ffn.fc1.weight", "module.blocks.5.ffn.fc1.bias", "module.blocks.5.ffn.fc2.weight", "module.blocks.5.ffn.fc2.bias", "module.blocks.5.ada_lin.1.weight", "module.blocks.5.ada_lin.1.bias", "module.blocks.6.attn.scale_mul_1H11", "module.blocks.6.attn.q_bias", "module.blocks.6.attn.v_bias", "module.blocks.6.attn.zero_k_bias", "module.blocks.6.attn.mat_qkv.weight", "module.blocks.6.attn.proj.weight", "module.blocks.6.attn.proj.bias", "module.blocks.6.ffn.fc1.weight", "module.blocks.6.ffn.fc1.bias", "module.blocks.6.ffn.fc2.weight", "module.blocks.6.ffn.fc2.bias", "module.blocks.6.ada_lin.1.weight", "module.blocks.6.ada_lin.1.bias", "module.blocks.7.attn.scale_mul_1H11", "module.blocks.7.attn.q_bias", "module.blocks.7.attn.v_bias", "module.blocks.7.attn.zero_k_bias", "module.blocks.7.attn.mat_qkv.weight", "module.blocks.7.attn.proj.weight", "module.blocks.7.attn.proj.bias", "module.blocks.7.ffn.fc1.weight", "module.blocks.7.ffn.fc1.bias", "module.blocks.7.ffn.fc2.weight", "module.blocks.7.ffn.fc2.bias", "module.blocks.7.ada_lin.1.weight", "module.blocks.7.ada_lin.1.bias", "module.blocks.8.attn.scale_mul_1H11", "module.blocks.8.attn.q_bias", "module.blocks.8.attn.v_bias", "module.blocks.8.attn.zero_k_bias", "module.blocks.8.attn.mat_qkv.weight", "module.blocks.8.attn.proj.weight", "module.blocks.8.attn.proj.bias", "module.blocks.8.ffn.fc1.weight", "module.blocks.8.ffn.fc1.bias", "module.blocks.8.ffn.fc2.weight", "module.blocks.8.ffn.fc2.bias", "module.blocks.8.ada_lin.1.weight", "module.blocks.8.ada_lin.1.bias", "module.blocks.9.attn.scale_mul_1H11", "module.blocks.9.attn.q_bias", "module.blocks.9.attn.v_bias", "module.blocks.9.attn.zero_k_bias", "module.blocks.9.attn.mat_qkv.weight", "module.blocks.9.attn.proj.weight", "module.blocks.9.attn.proj.bias", "module.blocks.9.ffn.fc1.weight", "module.blocks.9.ffn.fc1.bias", "module.blocks.9.ffn.fc2.weight", "module.blocks.9.ffn.fc2.bias", "module.blocks.9.ada_lin.1.weight", "module.blocks.9.ada_lin.1.bias", "module.blocks.10.attn.scale_mul_1H11", "module.blocks.10.attn.q_bias", "module.blocks.10.attn.v_bias", "module.blocks.10.attn.zero_k_bias", "module.blocks.10.attn.mat_qkv.weight", "module.blocks.10.attn.proj.weight", "module.blocks.10.attn.proj.bias", "module.blocks.10.ffn.fc1.weight", "module.blocks.10.ffn.fc1.bias", "module.blocks.10.ffn.fc2.weight", "module.blocks.10.ffn.fc2.bias", "module.blocks.10.ada_lin.1.weight", "module.blocks.10.ada_lin.1.bias", "module.blocks.11.attn.scale_mul_1H11", "module.blocks.11.attn.q_bias", "module.blocks.11.attn.v_bias", "module.blocks.11.attn.zero_k_bias", "module.blocks.11.attn.mat_qkv.weight", "module.blocks.11.attn.proj.weight", "module.blocks.11.attn.proj.bias", "module.blocks.11.ffn.fc1.weight", "module.blocks.11.ffn.fc1.bias", "module.blocks.11.ffn.fc2.weight", "module.blocks.11.ffn.fc2.bias", "module.blocks.11.ada_lin.1.weight", "module.blocks.11.ada_lin.1.bias", "module.blocks.12.attn.scale_mul_1H11", "module.blocks.12.attn.q_bias", "module.blocks.12.attn.v_bias", "module.blocks.12.attn.zero_k_bias", "module.blocks.12.attn.mat_qkv.weight", "module.blocks.12.attn.proj.weight", "module.blocks.12.attn.proj.bias", "module.blocks.12.ffn.fc1.weight", "module.blocks.12.ffn.fc1.bias", "module.blocks.12.ffn.fc2.weight", "module.blocks.12.ffn.fc2.bias", "module.blocks.12.ada_lin.1.weight", "module.blocks.12.ada_lin.1.bias", "module.blocks.13.attn.scale_mul_1H11", "module.blocks.13.attn.q_bias", "module.blocks.13.attn.v_bias", "module.blocks.13.attn.zero_k_bias", "module.blocks.13.attn.mat_qkv.weight", "module.blocks.13.attn.proj.weight", "module.blocks.13.attn.proj.bias", "module.blocks.13.ffn.fc1.weight", "module.blocks.13.ffn.fc1.bias", "module.blocks.13.ffn.fc2.weight", "module.blocks.13.ffn.fc2.bias", "module.blocks.13.ada_lin.1.weight", "module.blocks.13.ada_lin.1.bias", "module.blocks.14.attn.scale_mul_1H11", "module.blocks.14.attn.q_bias", "module.blocks.14.attn.v_bias", "module.blocks.14.attn.zero_k_bias", "module.blocks.14.attn.mat_qkv.weight", "module.blocks.14.attn.proj.weight", "module.blocks.14.attn.proj.bias", "module.blocks.14.ffn.fc1.weight", "module.blocks.14.ffn.fc1.bias", "module.blocks.14.ffn.fc2.weight", "module.blocks.14.ffn.fc2.bias", "module.blocks.14.ada_lin.1.weight", "module.blocks.14.ada_lin.1.bias", "module.blocks.15.attn.scale_mul_1H11", "module.blocks.15.attn.q_bias", "module.blocks.15.attn.v_bias", "module.blocks.15.attn.zero_k_bias", "module.blocks.15.attn.mat_qkv.weight", "module.blocks.15.attn.proj.weight", "module.blocks.15.attn.proj.bias", "module.blocks.15.ffn.fc1.weight", "module.blocks.15.ffn.fc1.bias", "module.blocks.15.ffn.fc2.weight", "module.blocks.15.ffn.fc2.bias", "module.blocks.15.ada_lin.1.weight", "module.blocks.15.ada_lin.1.bias", "module.head_nm.ada_lin.1.weight", "module.head_nm.ada_lin.1.bias", "module.head.weight", "module.head.bias". 
	Unexpected key(s) in state_dict: "pos_start", "pos_1LC", "lvl_1L", "attn_bias_for_masking", "class_emb.weight", "lvl_embed.weight", "word_embed.weight", "word_embed.bias", "blocks.0.attn.scale_mul_1H11", "blocks.0.attn.q_bias", "blocks.0.attn.v_bias", "blocks.0.attn.zero_k_bias", "blocks.0.attn.mat_qkv.weight", "blocks.0.attn.proj.weight", "blocks.0.attn.proj.bias", "blocks.0.ffn.fc1.weight", "blocks.0.ffn.fc1.bias", "blocks.0.ffn.fc2.weight", "blocks.0.ffn.fc2.bias", "blocks.0.ada_lin.1.weight", "blocks.0.ada_lin.1.bias", "blocks.1.attn.scale_mul_1H11", "blocks.1.attn.q_bias", "blocks.1.attn.v_bias", "blocks.1.attn.zero_k_bias", "blocks.1.attn.mat_qkv.weight", "blocks.1.attn.proj.weight", "blocks.1.attn.proj.bias", "blocks.1.ffn.fc1.weight", "blocks.1.ffn.fc1.bias", "blocks.1.ffn.fc2.weight", "blocks.1.ffn.fc2.bias", "blocks.1.ada_lin.1.weight", "blocks.1.ada_lin.1.bias", "blocks.2.attn.scale_mul_1H11", "blocks.2.attn.q_bias", "blocks.2.attn.v_bias", "blocks.2.attn.zero_k_bias", "blocks.2.attn.mat_qkv.weight", "blocks.2.attn.proj.weight", "blocks.2.attn.proj.bias", "blocks.2.ffn.fc1.weight", "blocks.2.ffn.fc1.bias", "blocks.2.ffn.fc2.weight", "blocks.2.ffn.fc2.bias", "blocks.2.ada_lin.1.weight", "blocks.2.ada_lin.1.bias", "blocks.3.attn.scale_mul_1H11", "blocks.3.attn.q_bias", "blocks.3.attn.v_bias", "blocks.3.attn.zero_k_bias", "blocks.3.attn.mat_qkv.weight", "blocks.3.attn.proj.weight", "blocks.3.attn.proj.bias", "blocks.3.ffn.fc1.weight", "blocks.3.ffn.fc1.bias", "blocks.3.ffn.fc2.weight", "blocks.3.ffn.fc2.bias", "blocks.3.ada_lin.1.weight", "blocks.3.ada_lin.1.bias", "blocks.4.attn.scale_mul_1H11", "blocks.4.attn.q_bias", "blocks.4.attn.v_bias", "blocks.4.attn.zero_k_bias", "blocks.4.attn.mat_qkv.weight", "blocks.4.attn.proj.weight", "blocks.4.attn.proj.bias", "blocks.4.ffn.fc1.weight", "blocks.4.ffn.fc1.bias", "blocks.4.ffn.fc2.weight", "blocks.4.ffn.fc2.bias", "blocks.4.ada_lin.1.weight", "blocks.4.ada_lin.1.bias", "blocks.5.attn.scale_mul_1H11", "blocks.5.attn.q_bias", "blocks.5.attn.v_bias", "blocks.5.attn.zero_k_bias", "blocks.5.attn.mat_qkv.weight", "blocks.5.attn.proj.weight", "blocks.5.attn.proj.bias", "blocks.5.ffn.fc1.weight", "blocks.5.ffn.fc1.bias", "blocks.5.ffn.fc2.weight", "blocks.5.ffn.fc2.bias", "blocks.5.ada_lin.1.weight", "blocks.5.ada_lin.1.bias", "blocks.6.attn.scale_mul_1H11", "blocks.6.attn.q_bias", "blocks.6.attn.v_bias", "blocks.6.attn.zero_k_bias", "blocks.6.attn.mat_qkv.weight", "blocks.6.attn.proj.weight", "blocks.6.attn.proj.bias", "blocks.6.ffn.fc1.weight", "blocks.6.ffn.fc1.bias", "blocks.6.ffn.fc2.weight", "blocks.6.ffn.fc2.bias", "blocks.6.ada_lin.1.weight", "blocks.6.ada_lin.1.bias", "blocks.7.attn.scale_mul_1H11", "blocks.7.attn.q_bias", "blocks.7.attn.v_bias", "blocks.7.attn.zero_k_bias", "blocks.7.attn.mat_qkv.weight", "blocks.7.attn.proj.weight", "blocks.7.attn.proj.bias", "blocks.7.ffn.fc1.weight", "blocks.7.ffn.fc1.bias", "blocks.7.ffn.fc2.weight", "blocks.7.ffn.fc2.bias", "blocks.7.ada_lin.1.weight", "blocks.7.ada_lin.1.bias", "blocks.8.attn.scale_mul_1H11", "blocks.8.attn.q_bias", "blocks.8.attn.v_bias", "blocks.8.attn.zero_k_bias", "blocks.8.attn.mat_qkv.weight", "blocks.8.attn.proj.weight", "blocks.8.attn.proj.bias", "blocks.8.ffn.fc1.weight", "blocks.8.ffn.fc1.bias", "blocks.8.ffn.fc2.weight", "blocks.8.ffn.fc2.bias", "blocks.8.ada_lin.1.weight", "blocks.8.ada_lin.1.bias", "blocks.9.attn.scale_mul_1H11", "blocks.9.attn.q_bias", "blocks.9.attn.v_bias", "blocks.9.attn.zero_k_bias", "blocks.9.attn.mat_qkv.weight", "blocks.9.attn.proj.weight", "blocks.9.attn.proj.bias", "blocks.9.ffn.fc1.weight", "blocks.9.ffn.fc1.bias", "blocks.9.ffn.fc2.weight", "blocks.9.ffn.fc2.bias", "blocks.9.ada_lin.1.weight", "blocks.9.ada_lin.1.bias", "blocks.10.attn.scale_mul_1H11", "blocks.10.attn.q_bias", "blocks.10.attn.v_bias", "blocks.10.attn.zero_k_bias", "blocks.10.attn.mat_qkv.weight", "blocks.10.attn.proj.weight", "blocks.10.attn.proj.bias", "blocks.10.ffn.fc1.weight", "blocks.10.ffn.fc1.bias", "blocks.10.ffn.fc2.weight", "blocks.10.ffn.fc2.bias", "blocks.10.ada_lin.1.weight", "blocks.10.ada_lin.1.bias", "blocks.11.attn.scale_mul_1H11", "blocks.11.attn.q_bias", "blocks.11.attn.v_bias", "blocks.11.attn.zero_k_bias", "blocks.11.attn.mat_qkv.weight", "blocks.11.attn.proj.weight", "blocks.11.attn.proj.bias", "blocks.11.ffn.fc1.weight", "blocks.11.ffn.fc1.bias", "blocks.11.ffn.fc2.weight", "blocks.11.ffn.fc2.bias", "blocks.11.ada_lin.1.weight", "blocks.11.ada_lin.1.bias", "blocks.12.attn.scale_mul_1H11", "blocks.12.attn.q_bias", "blocks.12.attn.v_bias", "blocks.12.attn.zero_k_bias", "blocks.12.attn.mat_qkv.weight", "blocks.12.attn.proj.weight", "blocks.12.attn.proj.bias", "blocks.12.ffn.fc1.weight", "blocks.12.ffn.fc1.bias", "blocks.12.ffn.fc2.weight", "blocks.12.ffn.fc2.bias", "blocks.12.ada_lin.1.weight", "blocks.12.ada_lin.1.bias", "blocks.13.attn.scale_mul_1H11", "blocks.13.attn.q_bias", "blocks.13.attn.v_bias", "blocks.13.attn.zero_k_bias", "blocks.13.attn.mat_qkv.weight", "blocks.13.attn.proj.weight", "blocks.13.attn.proj.bias", "blocks.13.ffn.fc1.weight", "blocks.13.ffn.fc1.bias", "blocks.13.ffn.fc2.weight", "blocks.13.ffn.fc2.bias", "blocks.13.ada_lin.1.weight", "blocks.13.ada_lin.1.bias", "blocks.14.attn.scale_mul_1H11", "blocks.14.attn.q_bias", "blocks.14.attn.v_bias", "blocks.14.attn.zero_k_bias", "blocks.14.attn.mat_qkv.weight", "blocks.14.attn.proj.weight", "blocks.14.attn.proj.bias", "blocks.14.ffn.fc1.weight", "blocks.14.ffn.fc1.bias", "blocks.14.ffn.fc2.weight", "blocks.14.ffn.fc2.bias", "blocks.14.ada_lin.1.weight", "blocks.14.ada_lin.1.bias", "blocks.15.attn.scale_mul_1H11", "blocks.15.attn.q_bias", "blocks.15.attn.v_bias", "blocks.15.attn.zero_k_bias", "blocks.15.attn.mat_qkv.weight", "blocks.15.attn.proj.weight", "blocks.15.attn.proj.bias", "blocks.15.ffn.fc1.weight", "blocks.15.ffn.fc1.bias", "blocks.15.ffn.fc2.weight", "blocks.15.ffn.fc2.bias", "blocks.15.ada_lin.1.weight", "blocks.15.ada_lin.1.bias", "head_nm.ada_lin.1.weight", "head_nm.ada_lin.1.bias", "head.weight", "head.bias". 







=======================================================   RESTART [01-22 17:39:27]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:512: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/train.py:534: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  tc.model_var_wo_ddp.load_state_dict(torch.load(var_ckpt, map_location='cuda'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 548, in train
    final_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 470, in final_eval
    L_mean, L_tail, acc_mean, acc_tail, tot, duration = tc.trainer.eval_ep(tc.val_loader)
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 84, in eval_ep
    asdagfasdvs
NameError: name 'asdagfasdvs' is not defined







=======================================================   RESTART [01-22 17:51:54]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:512: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/train.py:534: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  tc.model_var_wo_ddp.load_state_dict(torch.load(var_ckpt, map_location='cuda'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 548, in train
    final_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 470, in final_eval
    L_mean, L_tail, acc_mean, acc_tail, tot, duration = tc.trainer.eval_ep(tc.val_loader)
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 87, in eval_ep
    print(('Correct' ,logits_BLV.data.argmax(dim=-1) == gt_BL).sum() * (100/gt_BL.shape[1]))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'tuple' object has no attribute 'sum'







=======================================================   RESTART [01-22 17:54:29]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:512: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/train.py:534: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  tc.model_var_wo_ddp.load_state_dict(torch.load(var_ckpt, map_location='cuda'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 548, in train
    final_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 470, in final_eval
    L_mean, L_tail, acc_mean, acc_tail, tot, duration = tc.trainer.eval_ep(tc.val_loader)
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/trainer.py", line 91, in eval_ep
    sdfsfsd
NameError: name 'sdfsfsd' is not defined







=======================================================   RESTART [01-22 17:58:25]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:512: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/train.py:534: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  tc.model_var_wo_ddp.load_state_dict(torch.load(var_ckpt, map_location='cuda'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
INFO:submitit:Job completed successfully
INFO:submitit:Exiting after successful completion







=======================================================   RESTART [01-22 18:59:58]   =======================================================







=======================================================   RESTART [01-22 19:03:41]   =======================================================







=======================================================   RESTART [01-22 20:13:53]   =======================================================







=======================================================   RESTART [01-22 20:16:15]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/train.py:506: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/train.py:528: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  tc.model_var_wo_ddp.load_state_dict(torch.load(var_ckpt, map_location='cuda'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
INFO:submitit:Job completed successfully
INFO:submitit:Exiting after successful completion







=======================================================   RESTART [01-22 20:20:25]   =======================================================







=======================================================   RESTART [01-22 20:28:17]   =======================================================







=======================================================   RESTART [01-22 20:39:49]   =======================================================







=======================================================   RESTART [01-22 20:39:49]   =======================================================







=======================================================   RESTART [01-22 20:39:49]   =======================================================







=======================================================   RESTART [01-22 20:39:49]   =======================================================







=======================================================   RESTART [01-22 20:39:49]   =======================================================
[01-22 20:39:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:39:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:39:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:39:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:39:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:39:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:39:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:39:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:39:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:39:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-22 20:40:46]   =======================================================







=======================================================   RESTART [01-22 20:51:01]   =======================================================







=======================================================   RESTART [01-22 20:51:01]   =======================================================







=======================================================   RESTART [01-22 20:51:02]   =======================================================







=======================================================   RESTART [01-22 20:51:02]   =======================================================







=======================================================   RESTART [01-22 20:51:02]   =======================================================
[01-22 20:51:01] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:51:02] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:51:02] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:51:02] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:51:02] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:51:02] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:51:02] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:51:02] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:51:02] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:51:02] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-22 20:51:49]   =======================================================







=======================================================   RESTART [01-22 20:51:49]   =======================================================







=======================================================   RESTART [01-22 20:53:56]   =======================================================







=======================================================   RESTART [01-22 20:53:56]   =======================================================







=======================================================   RESTART [01-22 20:53:57]   =======================================================







=======================================================   RESTART [01-22 20:53:57]   =======================================================







=======================================================   RESTART [01-22 20:53:57]   =======================================================
[01-22 20:53:56] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:53:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:53:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:53:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:53:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:53:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:53:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:53:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:53:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 20:53:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-22 20:55:17]   =======================================================







=======================================================   RESTART [01-22 20:55:17]   =======================================================
[01-22 20:55:17] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/train.py:506: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/train.py:528: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  tc.model_var_wo_ddp.load_state_dict(torch.load(var_ckpt, map_location='cuda'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
INFO:submitit:Job completed successfully
/gpfs/home2/jvincenti/D2DMoE/train.py:506: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/train.py:528: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  tc.model_var_wo_ddp.load_state_dict(torch.load(var_ckpt, map_location='cuda'), strict=True)
/gpfs/home2/jvincenti/D2DMoE/architectures/var.py:353: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=False):
INFO:submitit:Job completed successfully
INFO:submitit:Exiting after successful completion
INFO:submitit:Exiting after successful completion







=======================================================   RESTART [01-22 20:59:51]   =======================================================







=======================================================   RESTART [01-22 20:59:51]   =======================================================







=======================================================   RESTART [01-22 21:02:00]   =======================================================







=======================================================   RESTART [01-22 21:02:00]   =======================================================







=======================================================   RESTART [01-22 21:02:00]   =======================================================







=======================================================   RESTART [01-22 21:02:00]   =======================================================







=======================================================   RESTART [01-22 21:02:00]   =======================================================
[01-22 21:02:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:02:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:02:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:02:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:02:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:02:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:02:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:02:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:02:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:02:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-22 21:03:00]   =======================================================







=======================================================   RESTART [01-22 21:03:00]   =======================================================







=======================================================   RESTART [01-22 21:05:56]   =======================================================







=======================================================   RESTART [01-22 21:05:56]   =======================================================







=======================================================   RESTART [01-22 21:05:57]   =======================================================







=======================================================   RESTART [01-22 21:05:57]   =======================================================







=======================================================   RESTART [01-22 21:05:57]   =======================================================
[01-22 21:05:56] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:05:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:05:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:05:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:05:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:05:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:05:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:05:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:05:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:05:57] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-22 21:06:29]   =======================================================







=======================================================   RESTART [01-22 21:06:29]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)







=======================================================   RESTART [01-22 21:08:56]   =======================================================







=======================================================   RESTART [01-22 21:08:56]   =======================================================







=======================================================   RESTART [01-22 21:08:56]   =======================================================







=======================================================   RESTART [01-22 21:08:56]   =======================================================







=======================================================   RESTART [01-22 21:08:56]   =======================================================
[01-22 21:08:56] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:08:56] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:08:56] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:08:56] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:08:56] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:08:56] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:08:56] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:08:56] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:08:56] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:08:56] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-22 21:13:52]   =======================================================







=======================================================   RESTART [01-22 21:13:52]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)







=======================================================   RESTART [01-22 21:32:29]   =======================================================







=======================================================   RESTART [01-22 21:32:29]   =======================================================







=======================================================   RESTART [01-22 21:32:30]   =======================================================







=======================================================   RESTART [01-22 21:32:30]   =======================================================







=======================================================   RESTART [01-22 21:32:30]   =======================================================
[01-22 21:32:29] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:32:30] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:32:30] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:32:30] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:32:30] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:32:30] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:32:30] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:32:30] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:32:30] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:32:30] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-22 21:33:29]   =======================================================







=======================================================   RESTART [01-22 21:33:29]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)







=======================================================   RESTART [01-22 21:38:37]   =======================================================







=======================================================   RESTART [01-22 21:38:37]   =======================================================







=======================================================   RESTART [01-22 21:38:37]   =======================================================







=======================================================   RESTART [01-22 21:38:37]   =======================================================







=======================================================   RESTART [01-22 21:38:37]   =======================================================
[01-22 21:38:37] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:38:37] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:38:37] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:38:37] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:38:37] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:38:37] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:38:37] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:38:37] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:38:37] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:38:37] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-22 21:39:37]   =======================================================







=======================================================   RESTART [01-22 21:39:37]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)







=======================================================   RESTART [01-22 21:41:35]   =======================================================







=======================================================   RESTART [01-22 21:41:35]   =======================================================







=======================================================   RESTART [01-22 21:41:35]   =======================================================







=======================================================   RESTART [01-22 21:41:35]   =======================================================







=======================================================   RESTART [01-22 21:41:35]   =======================================================
[01-22 21:41:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:41:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:41:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:41:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:41:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:41:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:41:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:41:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:41:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:41:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-22 21:42:06]   =======================================================







=======================================================   RESTART [01-22 21:42:06]   =======================================================
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)







=======================================================   RESTART [01-22 21:47:33]   =======================================================







=======================================================   RESTART [01-22 21:47:33]   =======================================================







=======================================================   RESTART [01-22 21:47:33]   =======================================================







=======================================================   RESTART [01-22 21:47:33]   =======================================================







=======================================================   RESTART [01-22 21:47:33]   =======================================================
[01-22 21:47:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:47:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:47:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:47:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:47:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:47:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:47:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:47:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:47:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:47:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-22 21:48:21]   =======================================================







=======================================================   RESTART [01-22 21:48:21]   =======================================================
[01-22 21:48:21] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 113, in replace_mha_projections
    d = original_model.hidden_dim
        ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1729, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'NullDDP' object has no attribute 'hidden_dim'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 115, in replace_mha_projections
    d = original_model.C
        ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1729, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'NullDDP' object has no attribute 'C'
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 113, in replace_mha_projections
    d = original_model.hidden_dim
        ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1729, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'NullDDP' object has no attribute 'hidden_dim'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 115, in replace_mha_projections
    d = original_model.C
        ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1729, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'NullDDP' object has no attribute 'C'







=======================================================   RESTART [01-22 21:51:03]   =======================================================







=======================================================   RESTART [01-22 21:51:03]   =======================================================







=======================================================   RESTART [01-22 21:51:04]   =======================================================







=======================================================   RESTART [01-22 21:51:04]   =======================================================







=======================================================   RESTART [01-22 21:51:04]   =======================================================
[01-22 21:51:03] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:51:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:51:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:51:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:51:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:51:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:51:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:51:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:51:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:51:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-22 21:51:33]   =======================================================







=======================================================   RESTART [01-22 21:51:33]   =======================================================
[01-22 21:51:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 113, in replace_mha_projections
    d = original_model.C
        ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1729, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'NullDDP' object has no attribute 'C'
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 113, in replace_mha_projections
    d = original_model.C
        ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1729, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'NullDDP' object has no attribute 'C'







=======================================================   RESTART [01-22 21:54:35]   =======================================================







=======================================================   RESTART [01-22 21:54:35]   =======================================================







=======================================================   RESTART [01-22 21:54:35]   =======================================================







=======================================================   RESTART [01-22 21:54:35]   =======================================================







=======================================================   RESTART [01-22 21:54:35]   =======================================================
[01-22 21:54:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:54:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:54:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:54:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:54:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:54:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:54:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:54:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:54:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 21:54:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-22 21:55:30]   =======================================================







=======================================================   RESTART [01-22 21:55:30]   =======================================================
[01-22 21:55:30] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 136, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 136, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]







=======================================================   RESTART [01-22 22:02:13]   =======================================================







=======================================================   RESTART [01-22 22:02:13]   =======================================================







=======================================================   RESTART [01-22 22:02:13]   =======================================================







=======================================================   RESTART [01-22 22:02:13]   =======================================================







=======================================================   RESTART [01-22 22:02:13]   =======================================================
[01-22 22:02:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 22:02:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 22:02:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 22:02:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 22:02:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 22:02:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 22:02:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 22:02:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 22:02:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-22 22:02:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-22 22:02:36]   =======================================================







=======================================================   RESTART [01-22 22:02:36]   =======================================================
[01-22 22:02:36] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 141, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 141, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]







=======================================================   RESTART [01-23 22:26:04]   =======================================================







=======================================================   RESTART [01-23 22:26:04]   =======================================================







=======================================================   RESTART [01-23 22:26:04]   =======================================================







=======================================================   RESTART [01-23 22:26:04]   =======================================================







=======================================================   RESTART [01-23 22:26:04]   =======================================================
[01-23 22:26:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:26:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:26:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:26:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:26:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:26:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:26:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:26:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:26:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:26:04] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-23 22:26:30]   =======================================================







=======================================================   RESTART [01-23 22:26:30]   =======================================================
[01-23 22:26:30] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 144, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 144, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]







=======================================================   RESTART [01-23 22:30:58]   =======================================================







=======================================================   RESTART [01-23 22:30:58]   =======================================================







=======================================================   RESTART [01-23 22:30:58]   =======================================================







=======================================================   RESTART [01-23 22:30:58]   =======================================================







=======================================================   RESTART [01-23 22:30:58]   =======================================================
[01-23 22:30:58] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:30:58] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:30:58] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:30:58] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:30:58] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:30:58] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:30:58] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:30:58] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:30:58] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:30:58] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-23 22:31:26]   =======================================================







=======================================================   RESTART [01-23 22:31:26]   =======================================================
[01-23 22:31:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 141, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 141, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]







=======================================================   RESTART [01-23 22:41:25]   =======================================================







=======================================================   RESTART [01-23 22:41:25]   =======================================================







=======================================================   RESTART [01-23 22:41:26]   =======================================================







=======================================================   RESTART [01-23 22:41:26]   =======================================================







=======================================================   RESTART [01-23 22:41:26]   =======================================================
[01-23 22:41:25] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:41:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:41:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:41:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:41:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:41:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:41:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:41:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:41:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:41:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-23 22:41:49]   =======================================================







=======================================================   RESTART [01-23 22:41:49]   =======================================================
[01-23 22:41:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 145, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 145, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]







=======================================================   RESTART [01-23 22:48:07]   =======================================================







=======================================================   RESTART [01-23 22:48:07]   =======================================================







=======================================================   RESTART [01-23 22:48:07]   =======================================================







=======================================================   RESTART [01-23 22:48:07]   =======================================================







=======================================================   RESTART [01-23 22:48:07]   =======================================================
[01-23 22:48:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:48:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:48:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:48:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:48:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:48:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:48:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:48:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:48:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:48:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-23 22:48:28]   =======================================================







=======================================================   RESTART [01-23 22:48:28]   =======================================================
[01-23 22:48:28] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 150, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 150, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]







=======================================================   RESTART [01-23 22:50:47]   =======================================================







=======================================================   RESTART [01-23 22:50:47]   =======================================================







=======================================================   RESTART [01-23 22:50:47]   =======================================================







=======================================================   RESTART [01-23 22:50:47]   =======================================================







=======================================================   RESTART [01-23 22:50:47]   =======================================================
[01-23 22:50:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:50:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:50:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:50:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:50:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:50:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:50:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:50:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:50:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:50:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-23 22:51:18]   =======================================================







=======================================================   RESTART [01-23 22:51:18]   =======================================================
[01-23 22:51:18] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 153, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 153, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]







=======================================================   RESTART [01-23 22:53:49]   =======================================================







=======================================================   RESTART [01-23 22:53:49]   =======================================================







=======================================================   RESTART [01-23 22:53:49]   =======================================================







=======================================================   RESTART [01-23 22:53:49]   =======================================================







=======================================================   RESTART [01-23 22:53:49]   =======================================================
[01-23 22:53:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:53:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:53:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:53:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:53:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:53:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:53:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:53:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:53:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:53:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-23 22:54:12]   =======================================================







=======================================================   RESTART [01-23 22:54:12]   =======================================================
[01-23 22:54:12] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 153, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 153, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]







=======================================================   RESTART [01-23 22:55:54]   =======================================================







=======================================================   RESTART [01-23 22:55:54]   =======================================================







=======================================================   RESTART [01-23 22:55:54]   =======================================================







=======================================================   RESTART [01-23 22:55:54]   =======================================================







=======================================================   RESTART [01-23 22:55:54]   =======================================================
[01-23 22:55:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:55:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:55:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:55:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:55:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:55:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:55:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:55:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:55:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 22:55:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-23 22:56:15]   =======================================================







=======================================================   RESTART [01-23 22:56:15]   =======================================================
[01-23 22:56:15] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 153, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 153, in replace_mha_projections
    assert len(modules_to_replace) > 0, f'{modules_to_replace=}'
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: modules_to_replace=[]







=======================================================   RESTART [01-23 23:06:03]   =======================================================







=======================================================   RESTART [01-23 23:06:03]   =======================================================







=======================================================   RESTART [01-23 23:06:03]   =======================================================







=======================================================   RESTART [01-23 23:06:03]   =======================================================







=======================================================   RESTART [01-23 23:06:03]   =======================================================
[01-23 23:06:03] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:06:03] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:06:03] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:06:03] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:06:03] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:06:03] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:06:03] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:06:03] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:06:03] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:06:03] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-23 23:06:27]   =======================================================







=======================================================   RESTART [01-23 23:06:27]   =======================================================
[01-23 23:06:27] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 149, in replace_mha_projections
    sfsdfs
NameError: name 'sfsdfs' is not defined
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 149, in replace_mha_projections
    sfsdfs
NameError: name 'sfsdfs' is not defined







=======================================================   RESTART [01-23 23:08:32]   =======================================================







=======================================================   RESTART [01-23 23:08:32]   =======================================================







=======================================================   RESTART [01-23 23:08:33]   =======================================================







=======================================================   RESTART [01-23 23:08:33]   =======================================================







=======================================================   RESTART [01-23 23:08:33]   =======================================================
[01-23 23:08:32] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:08:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:08:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:08:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:08:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:08:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:08:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:08:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:08:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:08:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-23 23:09:01]   =======================================================







=======================================================   RESTART [01-23 23:09:01]   =======================================================
[01-23 23:09:01] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 145, in replace_mha_projections
    print(find_module_names(original_model, create_attention_projection_filter_condition('proj')))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 254, in find_module_names
    if filter(model, module):
       ^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/custom.py", line 140, in filter_condition
    if isinstance(m, nn.Linear) and isinstance(parent_module, SelfAttention):
                                                              ^^^^^^^^^^^^^
NameError: name 'SelfAttention' is not defined
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 145, in replace_mha_projections
    print(find_module_names(original_model, create_attention_projection_filter_condition('proj')))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 254, in find_module_names
    if filter(model, module):
       ^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/custom.py", line 140, in filter_condition
    if isinstance(m, nn.Linear) and isinstance(parent_module, SelfAttention):
                                                              ^^^^^^^^^^^^^
NameError: name 'SelfAttention' is not defined







=======================================================   RESTART [01-23 23:11:41]   =======================================================







=======================================================   RESTART [01-23 23:11:41]   =======================================================







=======================================================   RESTART [01-23 23:11:42]   =======================================================







=======================================================   RESTART [01-23 23:11:42]   =======================================================







=======================================================   RESTART [01-23 23:11:42]   =======================================================
[01-23 23:11:41] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:11:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:11:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:11:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:11:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:11:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:11:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:11:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:11:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:11:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-23 23:12:40]   =======================================================







=======================================================   RESTART [01-23 23:12:40]   =======================================================
[01-23 23:12:40] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 149, in replace_mha_projections
    sfsdfs
NameError: name 'sfsdfs' is not defined
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 37, in setup_model
    model, tc.replaced_module_names = replace_mha_projections(base_model, **model_args)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 149, in replace_mha_projections
    sfsdfs
NameError: name 'sfsdfs' is not defined







=======================================================   RESTART [01-23 23:14:13]   =======================================================







=======================================================   RESTART [01-23 23:14:13]   =======================================================







=======================================================   RESTART [01-23 23:14:13]   =======================================================







=======================================================   RESTART [01-23 23:14:13]   =======================================================







=======================================================   RESTART [01-23 23:14:13]   =======================================================
[01-23 23:14:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:14:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:14:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:14:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:14:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:14:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:14:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:14:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:14:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-23 23:14:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-23 23:14:43]   =======================================================







=======================================================   RESTART [01-23 23:14:43]   =======================================================
[01-23 23:14:43] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 336, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys={
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']

/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 336, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys={
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']








=======================================================   RESTART [01-24 00:02:48]   =======================================================







=======================================================   RESTART [01-24 00:02:48]   =======================================================







=======================================================   RESTART [01-24 00:02:48]   =======================================================







=======================================================   RESTART [01-24 00:02:48]   =======================================================







=======================================================   RESTART [01-24 00:02:48]   =======================================================
[01-24 00:02:48] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:02:48] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:02:48] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:02:48] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:02:48] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:02:48] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:02:48] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:02:48] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:02:48] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:02:48] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 00:03:15]   =======================================================







=======================================================   RESTART [01-24 00:03:15]   =======================================================
[01-24 00:03:15] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 502, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys=params_to_freeze)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']

/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 502, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys=params_to_freeze)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']








=======================================================   RESTART [01-24 00:25:09]   =======================================================







=======================================================   RESTART [01-24 00:25:09]   =======================================================







=======================================================   RESTART [01-24 00:25:09]   =======================================================







=======================================================   RESTART [01-24 00:25:10]   =======================================================







=======================================================   RESTART [01-24 00:25:10]   =======================================================
[01-24 00:25:09] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:25:09] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:25:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:25:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:25:09] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:25:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:25:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:25:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:25:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:25:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 00:25:29]   =======================================================







=======================================================   RESTART [01-24 00:25:29]   =======================================================
[01-24 00:25:29] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 502, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys=params_to_freeze)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']

/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 502, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys=params_to_freeze)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']








=======================================================   RESTART [01-24 00:27:13]   =======================================================







=======================================================   RESTART [01-24 00:27:13]   =======================================================







=======================================================   RESTART [01-24 00:27:13]   =======================================================







=======================================================   RESTART [01-24 00:27:13]   =======================================================







=======================================================   RESTART [01-24 00:27:13]   =======================================================
[01-24 00:27:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:27:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:27:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:27:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:27:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:27:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:27:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:27:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:27:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:27:13] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 00:27:33]   =======================================================







=======================================================   RESTART [01-24 00:27:33]   =======================================================
[01-24 00:27:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 502, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys=params_to_freeze)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']

/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 502, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys=params_to_freeze)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']








=======================================================   RESTART [01-24 00:36:08]   =======================================================







=======================================================   RESTART [01-24 00:36:08]   =======================================================







=======================================================   RESTART [01-24 00:36:09]   =======================================================







=======================================================   RESTART [01-24 00:36:09]   =======================================================







=======================================================   RESTART [01-24 00:36:09]   =======================================================
[01-24 00:36:08] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:36:09] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:36:09] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:36:09] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:36:09] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:36:09] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:36:09] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:36:09] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:36:09] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 00:36:09] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 00:36:30]   =======================================================







=======================================================   RESTART [01-24 00:36:30]   =======================================================
[01-24 00:36:30] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 502, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys=params_to_freeze)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']

/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 502, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys=params_to_freeze)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']








=======================================================   RESTART [01-24 16:50:22]   =======================================================







=======================================================   RESTART [01-24 16:50:22]   =======================================================







=======================================================   RESTART [01-24 16:50:22]   =======================================================







=======================================================   RESTART [01-24 16:50:22]   =======================================================







=======================================================   RESTART [01-24 16:50:22]   =======================================================
[01-24 16:50:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:50:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:50:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:50:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:50:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:50:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:50:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:50:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:50:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:50:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 16:50:48]   =======================================================







=======================================================   RESTART [01-24 16:50:48]   =======================================================
[01-24 16:50:48] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 502, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys=params_to_freeze)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']

/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 502, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys=params_to_freeze)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']








=======================================================   RESTART [01-24 16:55:05]   =======================================================







=======================================================   RESTART [01-24 16:55:05]   =======================================================







=======================================================   RESTART [01-24 16:55:05]   =======================================================







=======================================================   RESTART [01-24 16:55:05]   =======================================================







=======================================================   RESTART [01-24 16:55:05]   =======================================================
[01-24 16:55:05] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:55:05] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:55:05] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:55:05] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:55:05] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:55:05] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:55:05] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:55:05] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:55:05] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 16:55:05] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 16:55:26]   =======================================================







=======================================================   RESTART [01-24 16:55:26]   =======================================================
[01-24 16:55:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 346, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys={
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']

/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 346, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys={
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']








=======================================================   RESTART [01-24 17:00:26]   =======================================================







=======================================================   RESTART [01-24 17:00:26]   =======================================================







=======================================================   RESTART [01-24 17:00:26]   =======================================================







=======================================================   RESTART [01-24 17:00:26]   =======================================================







=======================================================   RESTART [01-24 17:00:26]   =======================================================
[01-24 17:00:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:00:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:00:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:00:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:00:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:00:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:00:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:00:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:00:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:00:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 17:00:52]   =======================================================







=======================================================   RESTART [01-24 17:00:52]   =======================================================
[01-24 17:00:52] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 346, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys={
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']

/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 346, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys={
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']








=======================================================   RESTART [01-24 17:03:34]   =======================================================







=======================================================   RESTART [01-24 17:03:34]   =======================================================







=======================================================   RESTART [01-24 17:03:34]   =======================================================







=======================================================   RESTART [01-24 17:03:34]   =======================================================







=======================================================   RESTART [01-24 17:03:34]   =======================================================
[01-24 17:03:34] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:03:34] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:03:34] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:03:34] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:03:34] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:03:34] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:03:34] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:03:34] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:03:34] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:03:34] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 17:03:55]   =======================================================







=======================================================   RESTART [01-24 17:03:55]   =======================================================
[01-24 17:03:55] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 346, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys={
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']

/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 346, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys={
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']








=======================================================   RESTART [01-24 17:07:20]   =======================================================







=======================================================   RESTART [01-24 17:07:20]   =======================================================







=======================================================   RESTART [01-24 17:07:20]   =======================================================







=======================================================   RESTART [01-24 17:07:20]   =======================================================







=======================================================   RESTART [01-24 17:07:20]   =======================================================
[01-24 17:07:20] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:07:20] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:07:20] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:07:20] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:07:20] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:07:20] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:07:20] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:07:20] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:07:20] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:07:20] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 17:07:37]   =======================================================







=======================================================   RESTART [01-24 17:07:37]   =======================================================
[01-24 17:07:37] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 41, in setup_model
    activations_to_sparsify = find_gelu_activations(model, 'mha_projections')
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 213, in find_gelu_activations
    acts_to_sparsify = find_module_names(model, mha_gelu_activation_filter)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 254, in find_module_names
    if filter(model, module):
       ^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 191, in mha_gelu_activation_filter
    print(isinstance(m, (nn.GELU, PytorchGELUTanh)), isinstance(parent_module, (MLP, TorchvisionMLP, SubstitutionMLP, GPTMLP, BertLayer, GemmaMLP)), isinstance(grandparent_module, (CustomMultiheadAttention, SelfAttention))) 
                                                                                                                                                                                                               ^^^^^^^^^^^^^
NameError: name 'SelfAttention' is not defined
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 213, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 41, in setup_model
    activations_to_sparsify = find_gelu_activations(model, 'mha_projections')
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 213, in find_gelu_activations
    acts_to_sparsify = find_module_names(model, mha_gelu_activation_filter)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 254, in find_module_names
    if filter(model, module):
       ^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/moe/dsti.py", line 191, in mha_gelu_activation_filter
    print(isinstance(m, (nn.GELU, PytorchGELUTanh)), isinstance(parent_module, (MLP, TorchvisionMLP, SubstitutionMLP, GPTMLP, BertLayer, GemmaMLP)), isinstance(grandparent_module, (CustomMultiheadAttention, SelfAttention))) 
                                                                                                                                                                                                               ^^^^^^^^^^^^^
NameError: name 'SelfAttention' is not defined







=======================================================   RESTART [01-24 17:11:39]   =======================================================







=======================================================   RESTART [01-24 17:11:39]   =======================================================







=======================================================   RESTART [01-24 17:11:39]   =======================================================







=======================================================   RESTART [01-24 17:11:39]   =======================================================







=======================================================   RESTART [01-24 17:11:39]   =======================================================
[01-24 17:11:39] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:11:39] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:11:39] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:11:39] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:11:39] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:11:39] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:11:39] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:11:39] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:11:39] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:11:39] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 17:12:03]   =======================================================







=======================================================   RESTART [01-24 17:12:03]   =======================================================
[01-24 17:12:03] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 346, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys={
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']

/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 346, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys={
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']








=======================================================   RESTART [01-24 17:16:27]   =======================================================







=======================================================   RESTART [01-24 17:16:27]   =======================================================







=======================================================   RESTART [01-24 17:16:27]   =======================================================







=======================================================   RESTART [01-24 17:16:27]   =======================================================







=======================================================   RESTART [01-24 17:16:27]   =======================================================
[01-24 17:16:27] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:16:27] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:16:27] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:16:27] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:16:27] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:16:27] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:16:27] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:16:27] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:16:27] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:16:27] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 17:16:46]   =======================================================







=======================================================   RESTART [01-24 17:16:46]   =======================================================
[01-24 17:16:46] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 346, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys={
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']

/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 346, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys={
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 107, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']








=======================================================   RESTART [01-24 17:40:42]   =======================================================







=======================================================   RESTART [01-24 17:40:42]   =======================================================







=======================================================   RESTART [01-24 17:40:42]   =======================================================







=======================================================   RESTART [01-24 17:40:42]   =======================================================







=======================================================   RESTART [01-24 17:40:42]   =======================================================
[01-24 17:40:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:40:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:40:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:40:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:40:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:40:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:40:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:40:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:40:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 17:40:42] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 17:41:05]   =======================================================







=======================================================   RESTART [01-24 17:41:05]   =======================================================
[01-24 17:41:05] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 346, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys={
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 110, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']

/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 215, in train
    setup_optimization(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 346, in setup_optimization
    names, paras, para_groups = filter_params(tc.model, nowd_keys={
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils_var/lr_control.py", line 110, in filter_params
    assert len(names_no_grad) == 0, f'[get_param_groups] names_no_grad = \n{pformat(names_no_grad, indent=2, width=240)}\n'
           ^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: [get_param_groups] names_no_grad = 
[ 'module.pos_start',
  'module.pos_1LC',
  'module.word_embed.weight',
  'module.word_embed.bias',
  'module.class_emb.weight',
  'module.lvl_embed.weight',
  'module.blocks.0.attn.scale_mul_1H11',
  'module.blocks.0.attn.q_bias',
  'module.blocks.0.attn.v_bias',
  'module.blocks.0.ffn.fc1.weight',
  'module.blocks.0.ffn.fc1.bias',
  'module.blocks.0.ffn.fc2.weight',
  'module.blocks.0.ffn.fc2.bias',
  'module.blocks.0.ada_lin.1.weight',
  'module.blocks.0.ada_lin.1.bias',
  'module.blocks.1.attn.scale_mul_1H11',
  'module.blocks.1.attn.q_bias',
  'module.blocks.1.attn.v_bias',
  'module.blocks.1.ffn.fc1.weight',
  'module.blocks.1.ffn.fc1.bias',
  'module.blocks.1.ffn.fc2.weight',
  'module.blocks.1.ffn.fc2.bias',
  'module.blocks.1.ada_lin.1.weight',
  'module.blocks.1.ada_lin.1.bias',
  'module.blocks.2.attn.scale_mul_1H11',
  'module.blocks.2.attn.q_bias',
  'module.blocks.2.attn.v_bias',
  'module.blocks.2.ffn.fc1.weight',
  'module.blocks.2.ffn.fc1.bias',
  'module.blocks.2.ffn.fc2.weight',
  'module.blocks.2.ffn.fc2.bias',
  'module.blocks.2.ada_lin.1.weight',
  'module.blocks.2.ada_lin.1.bias',
  'module.blocks.3.attn.scale_mul_1H11',
  'module.blocks.3.attn.q_bias',
  'module.blocks.3.attn.v_bias',
  'module.blocks.3.ffn.fc1.weight',
  'module.blocks.3.ffn.fc1.bias',
  'module.blocks.3.ffn.fc2.weight',
  'module.blocks.3.ffn.fc2.bias',
  'module.blocks.3.ada_lin.1.weight',
  'module.blocks.3.ada_lin.1.bias',
  'module.blocks.4.attn.scale_mul_1H11',
  'module.blocks.4.attn.q_bias',
  'module.blocks.4.attn.v_bias',
  'module.blocks.4.ffn.fc1.weight',
  'module.blocks.4.ffn.fc1.bias',
  'module.blocks.4.ffn.fc2.weight',
  'module.blocks.4.ffn.fc2.bias',
  'module.blocks.4.ada_lin.1.weight',
  'module.blocks.4.ada_lin.1.bias',
  'module.blocks.5.attn.scale_mul_1H11',
  'module.blocks.5.attn.q_bias',
  'module.blocks.5.attn.v_bias',
  'module.blocks.5.ffn.fc1.weight',
  'module.blocks.5.ffn.fc1.bias',
  'module.blocks.5.ffn.fc2.weight',
  'module.blocks.5.ffn.fc2.bias',
  'module.blocks.5.ada_lin.1.weight',
  'module.blocks.5.ada_lin.1.bias',
  'module.blocks.6.attn.scale_mul_1H11',
  'module.blocks.6.attn.q_bias',
  'module.blocks.6.attn.v_bias',
  'module.blocks.6.ffn.fc1.weight',
  'module.blocks.6.ffn.fc1.bias',
  'module.blocks.6.ffn.fc2.weight',
  'module.blocks.6.ffn.fc2.bias',
  'module.blocks.6.ada_lin.1.weight',
  'module.blocks.6.ada_lin.1.bias',
  'module.blocks.7.attn.scale_mul_1H11',
  'module.blocks.7.attn.q_bias',
  'module.blocks.7.attn.v_bias',
  'module.blocks.7.ffn.fc1.weight',
  'module.blocks.7.ffn.fc1.bias',
  'module.blocks.7.ffn.fc2.weight',
  'module.blocks.7.ffn.fc2.bias',
  'module.blocks.7.ada_lin.1.weight',
  'module.blocks.7.ada_lin.1.bias',
  'module.blocks.8.attn.scale_mul_1H11',
  'module.blocks.8.attn.q_bias',
  'module.blocks.8.attn.v_bias',
  'module.blocks.8.ffn.fc1.weight',
  'module.blocks.8.ffn.fc1.bias',
  'module.blocks.8.ffn.fc2.weight',
  'module.blocks.8.ffn.fc2.bias',
  'module.blocks.8.ada_lin.1.weight',
  'module.blocks.8.ada_lin.1.bias',
  'module.blocks.9.attn.scale_mul_1H11',
  'module.blocks.9.attn.q_bias',
  'module.blocks.9.attn.v_bias',
  'module.blocks.9.ffn.fc1.weight',
  'module.blocks.9.ffn.fc1.bias',
  'module.blocks.9.ffn.fc2.weight',
  'module.blocks.9.ffn.fc2.bias',
  'module.blocks.9.ada_lin.1.weight',
  'module.blocks.9.ada_lin.1.bias',
  'module.blocks.10.attn.scale_mul_1H11',
  'module.blocks.10.attn.q_bias',
  'module.blocks.10.attn.v_bias',
  'module.blocks.10.ffn.fc1.weight',
  'module.blocks.10.ffn.fc1.bias',
  'module.blocks.10.ffn.fc2.weight',
  'module.blocks.10.ffn.fc2.bias',
  'module.blocks.10.ada_lin.1.weight',
  'module.blocks.10.ada_lin.1.bias',
  'module.blocks.11.attn.scale_mul_1H11',
  'module.blocks.11.attn.q_bias',
  'module.blocks.11.attn.v_bias',
  'module.blocks.11.ffn.fc1.weight',
  'module.blocks.11.ffn.fc1.bias',
  'module.blocks.11.ffn.fc2.weight',
  'module.blocks.11.ffn.fc2.bias',
  'module.blocks.11.ada_lin.1.weight',
  'module.blocks.11.ada_lin.1.bias',
  'module.blocks.12.attn.scale_mul_1H11',
  'module.blocks.12.attn.q_bias',
  'module.blocks.12.attn.v_bias',
  'module.blocks.12.ffn.fc1.weight',
  'module.blocks.12.ffn.fc1.bias',
  'module.blocks.12.ffn.fc2.weight',
  'module.blocks.12.ffn.fc2.bias',
  'module.blocks.12.ada_lin.1.weight',
  'module.blocks.12.ada_lin.1.bias',
  'module.blocks.13.attn.scale_mul_1H11',
  'module.blocks.13.attn.q_bias',
  'module.blocks.13.attn.v_bias',
  'module.blocks.13.ffn.fc1.weight',
  'module.blocks.13.ffn.fc1.bias',
  'module.blocks.13.ffn.fc2.weight',
  'module.blocks.13.ffn.fc2.bias',
  'module.blocks.13.ada_lin.1.weight',
  'module.blocks.13.ada_lin.1.bias',
  'module.blocks.14.attn.scale_mul_1H11',
  'module.blocks.14.attn.q_bias',
  'module.blocks.14.attn.v_bias',
  'module.blocks.14.ffn.fc1.weight',
  'module.blocks.14.ffn.fc1.bias',
  'module.blocks.14.ffn.fc2.weight',
  'module.blocks.14.ffn.fc2.bias',
  'module.blocks.14.ada_lin.1.weight',
  'module.blocks.14.ada_lin.1.bias',
  'module.blocks.15.attn.scale_mul_1H11',
  'module.blocks.15.attn.q_bias',
  'module.blocks.15.attn.v_bias',
  'module.blocks.15.ffn.fc1.weight',
  'module.blocks.15.ffn.fc1.bias',
  'module.blocks.15.ffn.fc2.weight',
  'module.blocks.15.ffn.fc2.bias',
  'module.blocks.15.ada_lin.1.weight',
  'module.blocks.15.ada_lin.1.bias',
  'module.head_nm.ada_lin.1.weight',
  'module.head_nm.ada_lin.1.bias',
  'module.head.weight',
  'module.head.bias']








=======================================================   RESTART [01-24 18:25:07]   =======================================================







=======================================================   RESTART [01-24 18:25:07]   =======================================================







=======================================================   RESTART [01-24 18:25:07]   =======================================================







=======================================================   RESTART [01-24 18:25:07]   =======================================================







=======================================================   RESTART [01-24 18:25:07]   =======================================================
[01-24 18:25:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:25:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:25:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:25:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:25:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:25:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:25:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:25:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:25:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:25:07] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 18:25:36]   =======================================================







=======================================================   RESTART [01-24 18:25:36]   =======================================================
[01-24 18:25:36] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 217, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 86, in training_loop
    label_smoothing=mixup_smoothing, num_classes=unwrapped_model.number_of_classes)
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1729, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'NullDDP' object has no attribute 'number_of_classes'
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 217, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 86, in training_loop
    label_smoothing=mixup_smoothing, num_classes=unwrapped_model.number_of_classes)
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1729, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'NullDDP' object has no attribute 'number_of_classes'







=======================================================   RESTART [01-24 18:30:09]   =======================================================







=======================================================   RESTART [01-24 18:30:10]   =======================================================







=======================================================   RESTART [01-24 18:30:10]   =======================================================







=======================================================   RESTART [01-24 18:30:10]   =======================================================







=======================================================   RESTART [01-24 18:30:10]   =======================================================
[01-24 18:30:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:30:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:30:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:30:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:30:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:30:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:30:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:30:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:30:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:30:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 18:30:35]   =======================================================







=======================================================   RESTART [01-24 18:30:35]   =======================================================
[01-24 18:30:35] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 218, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 87, in training_loop
    label_smoothing=mixup_smoothing, num_classes=unwrapped_model.number_of_classes)
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1729, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'NullDDP' object has no attribute 'number_of_classes'
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 218, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 87, in training_loop
    label_smoothing=mixup_smoothing, num_classes=unwrapped_model.number_of_classes)
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1729, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'NullDDP' object has no attribute 'number_of_classes'







=======================================================   RESTART [01-24 18:34:18]   =======================================================







=======================================================   RESTART [01-24 18:34:18]   =======================================================







=======================================================   RESTART [01-24 18:34:18]   =======================================================







=======================================================   RESTART [01-24 18:34:18]   =======================================================







=======================================================   RESTART [01-24 18:34:18]   =======================================================
[01-24 18:34:18] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:34:18] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:34:18] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:34:18] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:34:18] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:34:18] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:34:18] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:34:18] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:34:18] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:34:18] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 18:34:44]   =======================================================







=======================================================   RESTART [01-24 18:34:44]   =======================================================
[01-24 18:34:44] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 217, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 100, in training_loop
    in_training_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 441, in in_training_eval
    raise NotImplementedError("Validation is not implemented yet.")
NotImplementedError: Validation is not implemented yet.
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 217, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 100, in training_loop
    in_training_eval(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 441, in in_training_eval
    raise NotImplementedError("Validation is not implemented yet.")
NotImplementedError: Validation is not implemented yet.







=======================================================   RESTART [01-24 18:36:49]   =======================================================







=======================================================   RESTART [01-24 18:36:49]   =======================================================







=======================================================   RESTART [01-24 18:36:50]   =======================================================







=======================================================   RESTART [01-24 18:36:50]   =======================================================







=======================================================   RESTART [01-24 18:36:50]   =======================================================
[01-24 18:36:49] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:36:50] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:36:50] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:36:50] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:36:50] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:36:50] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:36:50] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:36:50] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:36:50] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:36:50] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 18:37:18]   =======================================================







=======================================================   RESTART [01-24 18:37:18]   =======================================================
[01-24 18:37:18] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 217, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 113, in training_loop
    tc.base_model(X)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/pretrained.py", line 289, in forward
    return self.module(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: VAR.forward() missing 1 required positional argument: 'x_BLCv_wo_first_l'
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 217, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 113, in training_loop
    tc.base_model(X)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/pretrained.py", line 289, in forward
    return self.module(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: VAR.forward() missing 1 required positional argument: 'x_BLCv_wo_first_l'







=======================================================   RESTART [01-24 18:50:16]   =======================================================







=======================================================   RESTART [01-24 18:50:16]   =======================================================







=======================================================   RESTART [01-24 18:50:16]   =======================================================







=======================================================   RESTART [01-24 18:50:16]   =======================================================







=======================================================   RESTART [01-24 18:50:16]   =======================================================
[01-24 18:50:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:50:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:50:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:50:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:50:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:50:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:50:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:50:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:50:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 18:50:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 18:50:40]   =======================================================







=======================================================   RESTART [01-24 18:50:40]   =======================================================
[01-24 18:50:40] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 224, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 120, in training_loop
    tc.base_model(X)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/pretrained.py", line 289, in forward
    return self.module(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: VAR.forward() missing 1 required positional argument: 'x_BLCv_wo_first_l'
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 224, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 120, in training_loop
    tc.base_model(X)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/architectures/pretrained.py", line 289, in forward
    return self.module(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: VAR.forward() missing 1 required positional argument: 'x_BLCv_wo_first_l'







=======================================================   RESTART [01-24 19:08:59]   =======================================================







=======================================================   RESTART [01-24 19:09:00]   =======================================================







=======================================================   RESTART [01-24 19:09:00]   =======================================================







=======================================================   RESTART [01-24 19:09:00]   =======================================================







=======================================================   RESTART [01-24 19:09:00]   =======================================================
[01-24 19:09:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:09:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:09:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:09:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:09:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:09:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:09:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:09:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:09:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:09:00] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 19:09:33]   =======================================================







=======================================================   RESTART [01-24 19:09:33]   =======================================================
[01-24 19:09:33] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 242, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 120, in training_loop
    vocab_size=tc.model_vae.vocab_size, Cvae=32, using_znorm=False, beta=0.25,
               ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'vocab_size'
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 242, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 120, in training_loop
    vocab_size=tc.model_vae.vocab_size, Cvae=32, using_znorm=False, beta=0.25,
               ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'vocab_size'







=======================================================   RESTART [01-24 19:11:54]   =======================================================







=======================================================   RESTART [01-24 19:11:54]   =======================================================







=======================================================   RESTART [01-24 19:11:54]   =======================================================







=======================================================   RESTART [01-24 19:11:54]   =======================================================







=======================================================   RESTART [01-24 19:11:54]   =======================================================
[01-24 19:11:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:11:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:11:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:11:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:11:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:11:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:11:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:11:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:11:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:11:54] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 19:12:25]   =======================================================







=======================================================   RESTART [01-24 19:12:25]   =======================================================
[01-24 19:12:25] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 242, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 126, in training_loop
    B, V = y.shape[0], tc.model_vae.vocab_size
                       ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'vocab_size'
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 242, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 126, in training_loop
    B, V = y.shape[0], tc.model_vae.vocab_size
                       ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'vocab_size'







=======================================================   RESTART [01-24 19:18:52]   =======================================================







=======================================================   RESTART [01-24 19:18:52]   =======================================================







=======================================================   RESTART [01-24 19:18:53]   =======================================================







=======================================================   RESTART [01-24 19:18:53]   =======================================================







=======================================================   RESTART [01-24 19:18:53]   =======================================================
[01-24 19:18:52] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:18:53] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:18:53] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:18:53] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:18:53] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:18:53] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:18:53] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:18:53] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:18:53] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:18:53] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 19:19:14]   =======================================================







=======================================================   RESTART [01-24 19:19:14]   =======================================================
[01-24 19:19:14] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:517: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 242, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 517, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:517: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 242, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 517, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory







=======================================================   RESTART [01-24 19:25:36]   =======================================================







=======================================================   RESTART [01-24 19:25:36]   =======================================================







=======================================================   RESTART [01-24 19:25:36]   =======================================================







=======================================================   RESTART [01-24 19:25:36]   =======================================================







=======================================================   RESTART [01-24 19:25:36]   =======================================================
[01-24 19:25:36] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:25:36] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:25:36] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:25:36] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:25:36] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:25:36] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:25:36] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:25:36] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:25:36] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 19:25:36] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 19:25:59]   =======================================================







=======================================================   RESTART [01-24 19:25:59]   =======================================================
[01-24 19:25:59] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:517: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=False)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 242, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 517, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=False)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:517: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=False)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 242, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 517, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=False)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory







=======================================================   RESTART [01-24 20:38:11]   =======================================================







=======================================================   RESTART [01-24 20:38:11]   =======================================================







=======================================================   RESTART [01-24 20:38:11]   =======================================================







=======================================================   RESTART [01-24 20:38:11]   =======================================================







=======================================================   RESTART [01-24 20:38:12]   =======================================================
[01-24 20:38:11] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:38:11] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:38:11] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:38:12] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:38:11] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:38:11] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:38:12] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:38:11] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:38:12] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:38:12] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 20:38:40]   =======================================================







=======================================================   RESTART [01-24 20:38:40]   =======================================================
[01-24 20:38:40] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 261, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 122, in training_loop
    vocab_size=tc.model_vae.vocab_size, Cvae=32, using_znorm=False, beta=0.25,
               ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'vocab_size'
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 261, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 122, in training_loop
    vocab_size=tc.model_vae.vocab_size, Cvae=32, using_znorm=False, beta=0.25,
               ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'vocab_size'







=======================================================   RESTART [01-24 20:56:26]   =======================================================







=======================================================   RESTART [01-24 20:56:26]   =======================================================







=======================================================   RESTART [01-24 20:56:26]   =======================================================







=======================================================   RESTART [01-24 20:56:26]   =======================================================







=======================================================   RESTART [01-24 20:56:26]   =======================================================
[01-24 20:56:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:56:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:56:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:56:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:56:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:56:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:56:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:56:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:56:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:56:26] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 20:56:48]   =======================================================







=======================================================   RESTART [01-24 20:56:48]   =======================================================
[01-24 20:56:48] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 240, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 34, in setup_model
    base_model, base_args, _ = load_model(args, args.base_on, args.exp_id)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 596, in load_model
    adafsaf
NameError: name 'adafsaf' is not defined
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 240, in train
    setup_model(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 34, in setup_model
    base_model, base_args, _ = load_model(args, args.base_on, args.exp_id)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/utils.py", line 596, in load_model
    adafsaf
NameError: name 'adafsaf' is not defined







=======================================================   RESTART [01-24 20:59:29]   =======================================================







=======================================================   RESTART [01-24 20:59:29]   =======================================================







=======================================================   RESTART [01-24 20:59:29]   =======================================================







=======================================================   RESTART [01-24 20:59:29]   =======================================================







=======================================================   RESTART [01-24 20:59:29]   =======================================================
[01-24 20:59:29] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:59:29] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:59:29] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:59:29] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:59:29] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:59:29] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:59:29] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:59:29] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:59:29] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 20:59:29] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 20:59:56]   =======================================================







=======================================================   RESTART [01-24 20:59:56]   =======================================================
[01-24 20:59:56] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 261, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 122, in training_loop
    vocab_size=tc.model_vae.vocab_size, Cvae=32, using_znorm=False, beta=0.25,
               ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'vocab_size'
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 261, in train
    training_loop(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 122, in training_loop
    vocab_size=tc.model_vae.vocab_size, Cvae=32, using_znorm=False, beta=0.25,
               ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'vocab_size'







=======================================================   RESTART [01-24 21:05:47]   =======================================================







=======================================================   RESTART [01-24 21:05:47]   =======================================================







=======================================================   RESTART [01-24 21:05:47]   =======================================================







=======================================================   RESTART [01-24 21:05:47]   =======================================================







=======================================================   RESTART [01-24 21:05:47]   =======================================================
[01-24 21:05:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:05:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:05:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:05:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:05:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:05:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:05:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:05:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:05:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:05:47] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 21:06:11]   =======================================================







=======================================================   RESTART [01-24 21:06:11]   =======================================================
[01-24 21:06:11] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:517: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 243, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 517, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:517: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 243, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 517, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory







=======================================================   RESTART [01-24 21:10:10]   =======================================================







=======================================================   RESTART [01-24 21:10:10]   =======================================================







=======================================================   RESTART [01-24 21:10:10]   =======================================================







=======================================================   RESTART [01-24 21:10:10]   =======================================================







=======================================================   RESTART [01-24 21:10:10]   =======================================================
[01-24 21:10:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:10:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:10:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:10:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:10:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:10:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:10:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:10:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:10:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:10:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 21:10:32]   =======================================================







=======================================================   RESTART [01-24 21:10:32]   =======================================================
[01-24 21:10:32] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:514: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 243, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 514, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:514: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 243, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 514, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory







=======================================================   RESTART [01-24 21:13:16]   =======================================================







=======================================================   RESTART [01-24 21:13:16]   =======================================================







=======================================================   RESTART [01-24 21:13:17]   =======================================================







=======================================================   RESTART [01-24 21:13:17]   =======================================================







=======================================================   RESTART [01-24 21:13:17]   =======================================================
[01-24 21:13:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:13:17] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:13:17] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:13:17] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:13:17] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:13:17] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:13:17] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:13:17] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:13:17] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:13:17] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 21:13:36]   =======================================================







=======================================================   RESTART [01-24 21:13:36]   =======================================================
[01-24 21:13:36] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:518: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(vae_ckpt, map_location="cpu")
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 243, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 522, in make_vae
    raise e
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 518, in make_vae
    checkpoint = torch.load(vae_ckpt, map_location="cpu")
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:518: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(vae_ckpt, map_location="cpu")
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 243, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 522, in make_vae
    raise e
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 518, in make_vae
    checkpoint = torch.load(vae_ckpt, map_location="cpu")
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory







=======================================================   RESTART [01-24 21:25:08]   =======================================================







=======================================================   RESTART [01-24 21:25:08]   =======================================================







=======================================================   RESTART [01-24 21:25:08]   =======================================================







=======================================================   RESTART [01-24 21:25:08]   =======================================================







=======================================================   RESTART [01-24 21:25:08]   =======================================================
[01-24 21:25:08] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:25:08] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:25:08] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:25:08] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:25:08] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:25:08] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:25:08] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:25:08] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:25:08] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:25:08] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 21:25:28]   =======================================================







=======================================================   RESTART [01-24 21:25:28]   =======================================================
[01-24 21:25:28] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:513: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 243, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 513, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:513: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 243, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 513, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory







=======================================================   RESTART [01-24 21:33:51]   =======================================================







=======================================================   RESTART [01-24 21:33:51]   =======================================================







=======================================================   RESTART [01-24 21:33:51]   =======================================================







=======================================================   RESTART [01-24 21:33:51]   =======================================================







=======================================================   RESTART [01-24 21:33:51]   =======================================================
[01-24 21:33:51] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:33:51] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:33:51] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:33:51] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:33:51] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:33:51] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:33:51] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:33:51] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:33:51] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:33:51] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 21:34:10]   =======================================================







=======================================================   RESTART [01-24 21:34:10]   =======================================================
[01-24 21:34:10] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:513: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 243, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 513, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:513: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 243, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 513, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory







=======================================================   RESTART [01-24 21:37:22]   =======================================================







=======================================================   RESTART [01-24 21:37:22]   =======================================================







=======================================================   RESTART [01-24 21:37:22]   =======================================================







=======================================================   RESTART [01-24 21:37:22]   =======================================================







=======================================================   RESTART [01-24 21:37:22]   =======================================================
[01-24 21:37:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:37:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:37:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:37:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:37:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:37:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:37:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:37:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:37:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 21:37:22] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 21:37:40]   =======================================================







=======================================================   RESTART [01-24 21:37:40]   =======================================================
[01-24 21:37:40] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/train.py:513: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
/gpfs/home2/jvincenti/D2DMoE/train.py:513: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
ERROR:submitit:Submitted job triggered an exception
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 531, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 513, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 531, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 513, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory







=======================================================   RESTART [01-24 22:28:16]   =======================================================







=======================================================   RESTART [01-24 22:28:16]   =======================================================







=======================================================   RESTART [01-24 22:28:16]   =======================================================







=======================================================   RESTART [01-24 22:28:16]   =======================================================







=======================================================   RESTART [01-24 22:28:16]   =======================================================
[01-24 22:28:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 22:28:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 22:28:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 22:28:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 22:28:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 22:28:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 22:28:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 22:28:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 22:28:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
[01-24 22:28:16] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device







=======================================================   RESTART [01-24 22:28:41]   =======================================================







=======================================================   RESTART [01-24 22:28:41]   =======================================================
[01-24 22:28:41] (jvincenti/D2DMoE/dist.py, line  28)=> [dist initialize] env variable "RANK" is not set, use cuda:0 as the device
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:513: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 243, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 513, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory
/gpfs/home2/jvincenti/D2DMoE/utils.py:567: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  final_state = torch.load(final_path, map_location=device)
/gpfs/home2/jvincenti/D2DMoE/train.py:513: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/_submit.py", line 11, in <module>
    submitit_main()
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 76, in submitit_main
    process_job(args.folder)
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 69, in process_job
    raise error
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/submission.py", line 55, in process_job
    result = delayed.result()
             ^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/submitit/core/utils.py", line 137, in result
    self._result = self.function(*self.args, **self.kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home2/jvincenti/D2DMoE/methods/dynamic_sparsification/rep_distill_train.py", line 243, in train
    make_vae(args, tc)
  File "/gpfs/home2/jvincenti/D2DMoE/train.py", line 513, in make_vae
    vae_local.load_state_dict(torch.load(vae_ckpt, map_location='cpu'), strict=True)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 1072, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jvincenti/.conda/envs/effbench_env/lib/python3.12/site-packages/torch/serialization.py", line 480, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory
